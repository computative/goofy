ACE.SymmetricBasis{ACE.Product1pBasis{4, Tuple{ACE.Categorical1pBasis{:be, :be, 2, Symbol}, ACE.CylindricalBondEnvelope{Float64}, ACE.Rn1pBasis{Float64, ACE.Transforms.PolyTransform{Int64, Float64}, ACE.OrthPolys.OrthPolyBasis{Float64}, :rr, :n, ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, Float64}}}}, ACE.Ylm1pBasis{Float64, :rr, :l, :m, ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, ComplexF64}}}}}}, ACE.SphericalMatrix{0, 0, 1, 1, ComplexF64, 1}, ACE.O3{:l, :m}, typeof(identity), ACE.SphericalMatrix{0, 0, 1, 1, ComplexF64, 1}}
  pibasis: ACE.PIBasis{ACE.Product1pBasis{4, Tuple{ACE.Categorical1pBasis{:be, :be, 2, Symbol}, ACE.CylindricalBondEnvelope{Float64}, ACE.Rn1pBasis{Float64, ACE.Transforms.PolyTransform{Int64, Float64}, ACE.OrthPolys.OrthPolyBasis{Float64}, :rr, :n, ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, Float64}}}}, ACE.Ylm1pBasis{Float64, :rr, :l, :m, ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, ComplexF64}}}}}}, typeof(identity), ComplexF64, ComplexF64}
    basis1p: ACE.Product1pBasis{4, Tuple{ACE.Categorical1pBasis{:be, :be, 2, Symbol}, ACE.CylindricalBondEnvelope{Float64}, ACE.Rn1pBasis{Float64, ACE.Transforms.PolyTransform{Int64, Float64}, ACE.OrthPolys.OrthPolyBasis{Float64}, :rr, :n, ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, Float64}}}}, ACE.Ylm1pBasis{Float64, :rr, :l, :m, ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, ComplexF64}}}}}}
      bases: Tuple{ACE.Categorical1pBasis{:be, :be, 2, Symbol}, ACE.CylindricalBondEnvelope{Float64}, ACE.Rn1pBasis{Float64, ACE.Transforms.PolyTransform{Int64, Float64}, ACE.OrthPolys.OrthPolyBasis{Float64}, :rr, :n, ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, Float64}}}}, ACE.Ylm1pBasis{Float64, :rr, :l, :m, ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, ComplexF64}}}}}
        1: ACE.Categorical1pBasis{:be, :be, 2, Symbol}
          categories: ACE.SList{2, Symbol}
            list: StaticArraysCore.SVector{2, Symbol}
              data: Tuple{Symbol, Symbol}
                1: Symbol bond
                2: Symbol env
        2: ACE.CylindricalBondEnvelope{Float64}
          r0cut: Float64 5.0
          rcut: Float64 2.5
          zcut: Float64 2.5
          p0: Int64 2
          pr: Int64 2
          pz: Int64 2
          floppy: Bool true
          λ: Float64 0.5
        3: ACE.Rn1pBasis{Float64, ACE.Transforms.PolyTransform{Int64, Float64}, ACE.OrthPolys.OrthPolyBasis{Float64}, :rr, :n, ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, Float64}}}}
          R: ACE.OrthPolys.TransformedPolys{Float64, ACE.Transforms.PolyTransform{Int64, Float64}, ACE.OrthPolys.OrthPolyBasis{Float64}}
            J: ACE.OrthPolys.OrthPolyBasis{Float64}
              pl: Int64 2
              tl: Float64 0.130253743325013
              pr: Int64 0
              tr: Float64 0.5155555555555555
              A: Array{Float64}((5,)) [15.06201513840524, 18.425320414760744, 13.733447018522865, 12.297018332188836, 11.638633666376187]
              B: Array{Float64}((5,)) [0.0, -8.316055613226847, -5.316508132568968, -4.4445604332463855, -4.057112624662007]
              C: Array{Float64}((5,)) [0.0, 0.0, -0.745357296881543, -0.895406544009211, -0.9464598126125044]
              tdf: Array{Float64}((1000,)) [0.13044639423112828, 0.1308316960433588, 0.13121699785558935, 0.13160229966781992, 0.13198760148005045, 0.132372903292281, 0.13275820510451153, 0.13314350691674207, 0.1335288087289726, 0.13391411054120317  …  0.5118951883393653, 0.5122804901515959, 0.5126657919638264, 0.513051093776057, 0.5134363955882876, 0.5138216974005181, 0.5142069992127486, 0.5145923010249791, 0.5149776028372097, 0.5153629046494402]
              ww: Array{Float64}((1000,)) [0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001  …  0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001]
              B_pool: ACEbase.ObjectPools.VectorPool{Float64}
                arrays: Array{DataStructures.Stack{Vector{Float64}}}((1,))
              dB_pool: ACEbase.ObjectPools.VectorPool{Float64}
                arrays: Array{DataStructures.Stack{Vector{Float64}}}((1,))
            trans: ACE.Transforms.PolyTransform{Int64, Float64}
              p: Int64 1
              r0: Float64 0.16
            rl: Float64 1.25
            ru: Float64 7.905694150420948
            B_pool: ACEbase.ObjectPools.VectorPool{Float64}
              arrays: Array{DataStructures.Stack{Vector{Float64}}}((1,))
                1: DataStructures.Stack{Vector{Float64}}
            dB_pool: ACEbase.ObjectPools.VectorPool{Float64}
              arrays: Array{DataStructures.Stack{Vector{Float64}}}((1,))
                1: DataStructures.Stack{Vector{Float64}}
          B_pool: ACEbase.ObjectPools.VectorPool{Float64}
            arrays: Array{DataStructures.Stack{Vector{Float64}}}((1,))
              1: DataStructures.Stack{Vector{Float64}}
                store: DataStructures.Deque{Vector{Float64}}
          dB_pool: ACEbase.ObjectPools.VectorPool{ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, Float64}}}}
            arrays: Array{DataStructures.Stack{Vector{ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, Float64}}}}}}((1,))
              1: DataStructures.Stack{Vector{ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, Float64}}}}}
                store: DataStructures.Deque{Vector{ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, Float64}}}}}
        4: ACE.Ylm1pBasis{Float64, :rr, :l, :m, ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, ComplexF64}}}}
          SH: ACE.SphericalHarmonics.SHBasis{Float64}
            alp: ACE.SphericalHarmonics.ALPolynomials{Float64}
              L: Int64 5
              A: Array{Float64}((21,)) [0.0, 0.0, 0.0, 1.9364916731037085, 0.0, 0.0, 1.9720265943665387, 2.091650066335189, 0.0, 0.0  …  2.04939015319192, 2.29128784747792, 0.0, 0.0, 1.98997487421324, 2.03100960115899, 2.1712405933672376, 2.48746859276655, 0.0, 0.0]
              B: Array{Float64}((21,)) [0.0, 0.0, 0.0, -0.5773502691896257, 0.0, 0.0, -0.5163977794943222, -0.4472135954999579, 0.0, 0.0  …  -0.47809144373375745, -0.3779644730092272, 0.0, 0.0, -0.5039526306789697, -0.4879500364742666, -0.4364357804719847, -0.3333333333333333, 0.0, 0.0]
              B_pool: ACEbase.ObjectPools.VectorPool{Float64}
                arrays: Array{DataStructures.Stack{Vector{Float64}}}((1,))
            B_pool: ACEbase.ObjectPools.VectorPool{ComplexF64}
              arrays: Array{DataStructures.Stack{Vector{ComplexF64}}}((1,))
                1: DataStructures.Stack{Vector{ComplexF64}}
            dB_pool: ACEbase.ObjectPools.VectorPool{StaticArraysCore.SVector{3, ComplexF64}}
              arrays: Array{DataStructures.Stack{Vector{StaticArraysCore.SVector{3, ComplexF64}}}}((1,))
                1: DataStructures.Stack{Vector{StaticArraysCore.SVector{3, ComplexF64}}}
          B_pool: ACEbase.ObjectPools.VectorPool{ComplexF64}
            arrays: Array{DataStructures.Stack{Vector{ComplexF64}}}((1,))
              1: DataStructures.Stack{Vector{ComplexF64}}
                store: DataStructures.Deque{Vector{ComplexF64}}
          dB_pool: ACEbase.ObjectPools.VectorPool{ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, ComplexF64}}}}
            arrays: Array{DataStructures.Stack{Vector{ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, ComplexF64}}}}}}((1,))
              1: DataStructures.Stack{Vector{ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, ComplexF64}}}}}
                store: DataStructures.Deque{Vector{ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, ComplexF64}}}}}
      indices: Array{NTuple{4, Int64}}((180,))
        1: NTuple{4, Int64}
          1: Int64 1
          2: Int64 1
          3: Int64 1
          4: Int64 1
        2: NTuple{4, Int64}
          1: Int64 2
          2: Int64 1
          3: Int64 1
          4: Int64 1
        3: NTuple{4, Int64}
          1: Int64 1
          2: Int64 1
          3: Int64 1
          4: Int64 2
        4: NTuple{4, Int64}
          1: Int64 2
          2: Int64 1
          3: Int64 1
          4: Int64 2
        5: NTuple{4, Int64}
          1: Int64 1
          2: Int64 1
          3: Int64 2
          4: Int64 1
        ...
        176: NTuple{4, Int64}
          1: Int64 2
          2: Int64 1
          3: Int64 2
          4: Int64 25
        177: NTuple{4, Int64}
          1: Int64 1
          2: Int64 1
          3: Int64 1
          4: Int64 35
        178: NTuple{4, Int64}
          1: Int64 2
          2: Int64 1
          3: Int64 1
          4: Int64 35
        179: NTuple{4, Int64}
          1: Int64 1
          2: Int64 1
          3: Int64 1
          4: Int64 36
        180: NTuple{4, Int64}
          1: Int64 2
          2: Int64 1
          3: Int64 1
          4: Int64 36
    spec: ACE.PIBasisSpec
      orders: Array{Int64}((22,)) [1, 1, 1, 1, 1, 1, 1, 1, 1, 1  …  1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      iAA2iA: Array{Int64}((22, 1)) [1; 2; … ; 147; 148;;]
    real: identity (function of type typeof(identity))
    B_pool: ACEbase.ObjectPools.VectorPool{ComplexF64}
      arrays: Array{DataStructures.Stack{Vector{ComplexF64}}}((1,))
        1: DataStructures.Stack{Vector{ComplexF64}}
          store: DataStructures.Deque{Vector{ComplexF64}}
            nblocks: Int64 1
            blksize: Int64 1024
            len: Int64 0
            head: DataStructures.DequeBlock{Vector{ComplexF64}}
              data: Array{Vector{ComplexF64}}((1024,))
                1: #undef
                2: #undef
                3: #undef
                4: #undef
                5: #undef
                ...
                1020: #undef
                1021: #undef
                1022: #undef
                1023: #undef
                1024: #undef
              capa: Int64 1024
              front: Int64 1
              back: Int64 0
              prev: DataStructures.DequeBlock{Vector{ComplexF64}}#= circular reference @-1 =#
              next: DataStructures.DequeBlock{Vector{ComplexF64}}#= circular reference @-1 =#
            rear: DataStructures.DequeBlock{Vector{ComplexF64}}
              data: Array{Vector{ComplexF64}}((1024,))
                1: #undef
                2: #undef
                3: #undef
                4: #undef
                5: #undef
                ...
                1020: #undef
                1021: #undef
                1022: #undef
                1023: #undef
                1024: #undef
              capa: Int64 1024
              front: Int64 1
              back: Int64 0
              prev: DataStructures.DequeBlock{Vector{ComplexF64}}#= circular reference @-1 =#
              next: DataStructures.DequeBlock{Vector{ComplexF64}}#= circular reference @-1 =#
    dAA_pool: ACEbase.ObjectPools.VectorPool{ComplexF64}
      arrays: Array{DataStructures.Stack{Vector{ComplexF64}}}((1,))
        1: DataStructures.Stack{Vector{ComplexF64}}
          store: DataStructures.Deque{Vector{ComplexF64}}
            nblocks: Int64 1
            blksize: Int64 1024
            len: Int64 0
            head: DataStructures.DequeBlock{Vector{ComplexF64}}
              data: Array{Vector{ComplexF64}}((1024,))
                1: #undef
                2: #undef
                3: #undef
                4: #undef
                5: #undef
                ...
                1020: #undef
                1021: #undef
                1022: #undef
                1023: #undef
                1024: #undef
              capa: Int64 1024
              front: Int64 1
              back: Int64 0
              prev: DataStructures.DequeBlock{Vector{ComplexF64}}#= circular reference @-1 =#
              next: DataStructures.DequeBlock{Vector{ComplexF64}}#= circular reference @-1 =#
            rear: DataStructures.DequeBlock{Vector{ComplexF64}}
              data: Array{Vector{ComplexF64}}((1024,))
                1: #undef
                2: #undef
                3: #undef
                4: #undef
                5: #undef
                ...
                1020: #undef
                1021: #undef
                1022: #undef
                1023: #undef
                1024: #undef
              capa: Int64 1024
              front: Int64 1
              back: Int64 0
              prev: DataStructures.DequeBlock{Vector{ComplexF64}}#= circular reference @-1 =#
              next: DataStructures.DequeBlock{Vector{ComplexF64}}#= circular reference @-1 =#
  A2Bmap: SparseArrays.SparseMatrixCSC{ACE.SphericalMatrix{0, 0, 1, 1, ComplexF64, 1}, Int64}
    m: Int64 10
    n: Int64 22
    colptr: Array{Int64}((23,)) [1, 2, 3, 4, 5, 6, 7, 7, 7, 8  …  10, 11, 11, 11, 11, 11, 11, 11, 11, 11]
    rowval: Array{Int64}((10,)) [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
    nzval: Array{ACE.SphericalMatrix{0, 0, 1, 1, ComplexF64, 1}}((10,))
      1: ACE.SphericalMatrix{0, 0, 1, 1, ComplexF64, 1}
        val: StaticArraysCore.SMatrix{1, 1, ComplexF64, 1}
          data: Tuple{ComplexF64}
            1: ComplexF64
              re: Float64 1.0
              im: Float64 0.0
        _valL1: Val{0} Val{0}()
        _valL2: Val{0} Val{0}()
      2: ACE.SphericalMatrix{0, 0, 1, 1, ComplexF64, 1}
        val: StaticArraysCore.SMatrix{1, 1, ComplexF64, 1}
          data: Tuple{ComplexF64}
            1: ComplexF64
              re: Float64 1.0
              im: Float64 0.0
        _valL1: Val{0} Val{0}()
        _valL2: Val{0} Val{0}()
      3: ACE.SphericalMatrix{0, 0, 1, 1, ComplexF64, 1}
        val: StaticArraysCore.SMatrix{1, 1, ComplexF64, 1}
          data: Tuple{ComplexF64}
            1: ComplexF64
              re: Float64 1.0
              im: Float64 0.0
        _valL1: Val{0} Val{0}()
        _valL2: Val{0} Val{0}()
      4: ACE.SphericalMatrix{0, 0, 1, 1, ComplexF64, 1}
        val: StaticArraysCore.SMatrix{1, 1, ComplexF64, 1}
          data: Tuple{ComplexF64}
            1: ComplexF64
              re: Float64 1.0
              im: Float64 0.0
        _valL1: Val{0} Val{0}()
        _valL2: Val{0} Val{0}()
      5: ACE.SphericalMatrix{0, 0, 1, 1, ComplexF64, 1}
        val: StaticArraysCore.SMatrix{1, 1, ComplexF64, 1}
          data: Tuple{ComplexF64}
            1: ComplexF64
              re: Float64 1.0
              im: Float64 0.0
        _valL1: Val{0} Val{0}()
        _valL2: Val{0} Val{0}()
      6: ACE.SphericalMatrix{0, 0, 1, 1, ComplexF64, 1}
        val: StaticArraysCore.SMatrix{1, 1, ComplexF64, 1}
          data: Tuple{ComplexF64}
            1: ComplexF64
              re: Float64 1.0
              im: Float64 0.0
        _valL1: Val{0} Val{0}()
        _valL2: Val{0} Val{0}()
      7: ACE.SphericalMatrix{0, 0, 1, 1, ComplexF64, 1}
        val: StaticArraysCore.SMatrix{1, 1, ComplexF64, 1}
          data: Tuple{ComplexF64}
            1: ComplexF64
              re: Float64 1.0
              im: Float64 0.0
        _valL1: Val{0} Val{0}()
        _valL2: Val{0} Val{0}()
      8: ACE.SphericalMatrix{0, 0, 1, 1, ComplexF64, 1}
        val: StaticArraysCore.SMatrix{1, 1, ComplexF64, 1}
          data: Tuple{ComplexF64}
            1: ComplexF64
              re: Float64 1.0
              im: Float64 0.0
        _valL1: Val{0} Val{0}()
        _valL2: Val{0} Val{0}()
      9: ACE.SphericalMatrix{0, 0, 1, 1, ComplexF64, 1}
        val: StaticArraysCore.SMatrix{1, 1, ComplexF64, 1}
          data: Tuple{ComplexF64}
            1: ComplexF64
              re: Float64 1.0
              im: Float64 0.0
        _valL1: Val{0} Val{0}()
        _valL2: Val{0} Val{0}()
      10: ACE.SphericalMatrix{0, 0, 1, 1, ComplexF64, 1}
        val: StaticArraysCore.SMatrix{1, 1, ComplexF64, 1}
          data: Tuple{ComplexF64}
            1: ComplexF64
              re: Float64 1.0
              im: Float64 0.0
        _valL1: Val{0} Val{0}()
        _valL2: Val{0} Val{0}()
  symgrp: ACE.O3{:l, :m} ACE.O3{:l, :m}()
  real: identity (function of type typeof(identity))
  B_pool: ACEbase.ObjectPools.VectorPool{ACE.SphericalMatrix{0, 0, 1, 1, ComplexF64, 1}}
    arrays: Array{DataStructures.Stack{Vector{ACE.SphericalMatrix{0, 0, 1, 1, ComplexF64, 1}}}}((1,))
      1: DataStructures.Stack{Vector{ACE.SphericalMatrix{0, 0, 1, 1, ComplexF64, 1}}}
        store: DataStructures.Deque{Vector{ACE.SphericalMatrix{0, 0, 1, 1, ComplexF64, 1}}}
          nblocks: Int64 1
          blksize: Int64 1024
          len: Int64 0
          head: DataStructures.DequeBlock{Vector{ACE.SphericalMatrix{0, 0, 1, 1, ComplexF64, 1}}}
            data: Array{Vector{ACE.SphericalMatrix{0, 0, 1, 1, ComplexF64, 1}}}((1024,))
              1: #undef
              2: #undef
              3: #undef
              4: #undef
              5: #undef
              ...
              1020: #undef
              1021: #undef
              1022: #undef
              1023: #undef
              1024: #undef
            capa: Int64 1024
            front: Int64 1
            back: Int64 0
            prev: DataStructures.DequeBlock{Vector{ACE.SphericalMatrix{0, 0, 1, 1, ComplexF64, 1}}}#= circular reference @-1 =#
            next: DataStructures.DequeBlock{Vector{ACE.SphericalMatrix{0, 0, 1, 1, ComplexF64, 1}}}#= circular reference @-1 =#
          rear: DataStructures.DequeBlock{Vector{ACE.SphericalMatrix{0, 0, 1, 1, ComplexF64, 1}}}
            data: Array{Vector{ACE.SphericalMatrix{0, 0, 1, 1, ComplexF64, 1}}}((1024,))
              1: #undef
              2: #undef
              3: #undef
              4: #undef
              5: #undef
              ...
              1020: #undef
              1021: #undef
              1022: #undef
              1023: #undef
              1024: #undef
            capa: Int64 1024
            front: Int64 1
            back: Int64 0
            prev: DataStructures.DequeBlock{Vector{ACE.SphericalMatrix{0, 0, 1, 1, ComplexF64, 1}}}#= circular reference @-1 =#
            next: DataStructures.DequeBlock{Vector{ACE.SphericalMatrix{0, 0, 1, 1, ComplexF64, 1}}}#= circular reference @-1 =#
ComplexF64[0.008770057979544454 + 0.0im 0.10173429391325946 + 0.0im -0.03412193518643849 + 0.0im -0.2049074399604597 + 0.0im 0.06232328695299704 + 0.0im 0.05589382080889926 + 0.0im -0.062377773888629584 + 0.0im 0.15242327442620354 + 0.0im 0.019721101561330886 + 0.0im -0.032547925598029194 + 0.0im; 0.009954052730847781 + 0.0im 0.10216586993028298 + 0.0im -0.03823099056558186 + 0.0im -0.20595584287100432 + 0.0im 0.06830875916698911 + 0.0im 0.05577091771935532 + 0.0im -0.06534473225484776 + 0.0im 0.1563003739367195 + 0.0im 0.01573660324620616 + 0.0im -0.03856058365629833 + 0.0im; 0.01073386976623685 + 0.0im 0.10141345227961379 + 0.0im -0.04089195330925112 + 0.0im -0.18836385256530844 + 0.0im 0.07204962832542401 + 0.0im 0.02363847194542713 + 0.0im -0.06691855535602849 + 0.0im 0.14923492887711853 + 0.0im 0.012816406770153714 + 0.0im 0.009265726982241314 + 0.0im; 0.011052630166033587 + 0.0im 0.0935172889063349 + 0.0im -0.04196969685793716 + 0.0im -0.19714823617394098 + 0.0im 0.0735351763579462 + 0.0im 0.07080320402739737 + 0.0im -0.06748162991295843 + 0.0im 0.1384352420854876 + 0.0im 0.011565166085535778 + 0.0im -0.05593961705851398 + 0.0im]
ACE.SymmetricBasis{ACE.Product1pBasis{4, Tuple{ACE.Categorical1pBasis{:be, :be, 2, Symbol}, ACE.CylindricalBondEnvelope{Float64}, ACE.Rn1pBasis{Float64, ACE.Transforms.PolyTransform{Int64, Float64}, ACE.OrthPolys.OrthPolyBasis{Float64}, :rr, :n, ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, Float64}}}}, ACE.Ylm1pBasis{Float64, :rr, :l, :m, ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, ComplexF64}}}}}}, ACE.SphericalMatrix{0, 1, 1, 3, ComplexF64, 3}, ACE.O3{:l, :m}, typeof(identity), ACE.SphericalMatrix{0, 1, 1, 3, ComplexF64, 3}}
  pibasis: ACE.PIBasis{ACE.Product1pBasis{4, Tuple{ACE.Categorical1pBasis{:be, :be, 2, Symbol}, ACE.CylindricalBondEnvelope{Float64}, ACE.Rn1pBasis{Float64, ACE.Transforms.PolyTransform{Int64, Float64}, ACE.OrthPolys.OrthPolyBasis{Float64}, :rr, :n, ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, Float64}}}}, ACE.Ylm1pBasis{Float64, :rr, :l, :m, ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, ComplexF64}}}}}}, typeof(identity), ComplexF64, ComplexF64}
    basis1p: ACE.Product1pBasis{4, Tuple{ACE.Categorical1pBasis{:be, :be, 2, Symbol}, ACE.CylindricalBondEnvelope{Float64}, ACE.Rn1pBasis{Float64, ACE.Transforms.PolyTransform{Int64, Float64}, ACE.OrthPolys.OrthPolyBasis{Float64}, :rr, :n, ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, Float64}}}}, ACE.Ylm1pBasis{Float64, :rr, :l, :m, ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, ComplexF64}}}}}}
      bases: Tuple{ACE.Categorical1pBasis{:be, :be, 2, Symbol}, ACE.CylindricalBondEnvelope{Float64}, ACE.Rn1pBasis{Float64, ACE.Transforms.PolyTransform{Int64, Float64}, ACE.OrthPolys.OrthPolyBasis{Float64}, :rr, :n, ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, Float64}}}}, ACE.Ylm1pBasis{Float64, :rr, :l, :m, ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, ComplexF64}}}}}
        1: ACE.Categorical1pBasis{:be, :be, 2, Symbol}
          categories: ACE.SList{2, Symbol}
            list: StaticArraysCore.SVector{2, Symbol}
              data: Tuple{Symbol, Symbol}
                1: Symbol bond
                2: Symbol env
        2: ACE.CylindricalBondEnvelope{Float64}
          r0cut: Float64 5.0
          rcut: Float64 2.5
          zcut: Float64 2.5
          p0: Int64 2
          pr: Int64 2
          pz: Int64 2
          floppy: Bool true
          λ: Float64 0.5
        3: ACE.Rn1pBasis{Float64, ACE.Transforms.PolyTransform{Int64, Float64}, ACE.OrthPolys.OrthPolyBasis{Float64}, :rr, :n, ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, Float64}}}}
          R: ACE.OrthPolys.TransformedPolys{Float64, ACE.Transforms.PolyTransform{Int64, Float64}, ACE.OrthPolys.OrthPolyBasis{Float64}}
            J: ACE.OrthPolys.OrthPolyBasis{Float64}
              pl: Int64 2
              tl: Float64 0.130253743325013
              pr: Int64 0
              tr: Float64 0.5155555555555555
              A: Array{Float64}((5,)) [15.06201513840524, 18.425320414760744, 13.733447018522865, 12.297018332188836, 11.638633666376187]
              B: Array{Float64}((5,)) [0.0, -8.316055613226847, -5.316508132568968, -4.4445604332463855, -4.057112624662007]
              C: Array{Float64}((5,)) [0.0, 0.0, -0.745357296881543, -0.895406544009211, -0.9464598126125044]
              tdf: Array{Float64}((1000,)) [0.13044639423112828, 0.1308316960433588, 0.13121699785558935, 0.13160229966781992, 0.13198760148005045, 0.132372903292281, 0.13275820510451153, 0.13314350691674207, 0.1335288087289726, 0.13391411054120317  …  0.5118951883393653, 0.5122804901515959, 0.5126657919638264, 0.513051093776057, 0.5134363955882876, 0.5138216974005181, 0.5142069992127486, 0.5145923010249791, 0.5149776028372097, 0.5153629046494402]
              ww: Array{Float64}((1000,)) [0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001  …  0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001]
              B_pool: ACEbase.ObjectPools.VectorPool{Float64}
                arrays: Array{DataStructures.Stack{Vector{Float64}}}((1,))
              dB_pool: ACEbase.ObjectPools.VectorPool{Float64}
                arrays: Array{DataStructures.Stack{Vector{Float64}}}((1,))
            trans: ACE.Transforms.PolyTransform{Int64, Float64}
              p: Int64 1
              r0: Float64 0.16
            rl: Float64 1.25
            ru: Float64 7.905694150420948
            B_pool: ACEbase.ObjectPools.VectorPool{Float64}
              arrays: Array{DataStructures.Stack{Vector{Float64}}}((1,))
                1: DataStructures.Stack{Vector{Float64}}
            dB_pool: ACEbase.ObjectPools.VectorPool{Float64}
              arrays: Array{DataStructures.Stack{Vector{Float64}}}((1,))
                1: DataStructures.Stack{Vector{Float64}}
          B_pool: ACEbase.ObjectPools.VectorPool{Float64}
            arrays: Array{DataStructures.Stack{Vector{Float64}}}((1,))
              1: DataStructures.Stack{Vector{Float64}}
                store: DataStructures.Deque{Vector{Float64}}
          dB_pool: ACEbase.ObjectPools.VectorPool{ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, Float64}}}}
            arrays: Array{DataStructures.Stack{Vector{ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, Float64}}}}}}((1,))
              1: DataStructures.Stack{Vector{ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, Float64}}}}}
                store: DataStructures.Deque{Vector{ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, Float64}}}}}
        4: ACE.Ylm1pBasis{Float64, :rr, :l, :m, ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, ComplexF64}}}}
          SH: ACE.SphericalHarmonics.SHBasis{Float64}
            alp: ACE.SphericalHarmonics.ALPolynomials{Float64}
              L: Int64 5
              A: Array{Float64}((21,)) [0.0, 0.0, 0.0, 1.9364916731037085, 0.0, 0.0, 1.9720265943665387, 2.091650066335189, 0.0, 0.0  …  2.04939015319192, 2.29128784747792, 0.0, 0.0, 1.98997487421324, 2.03100960115899, 2.1712405933672376, 2.48746859276655, 0.0, 0.0]
              B: Array{Float64}((21,)) [0.0, 0.0, 0.0, -0.5773502691896257, 0.0, 0.0, -0.5163977794943222, -0.4472135954999579, 0.0, 0.0  …  -0.47809144373375745, -0.3779644730092272, 0.0, 0.0, -0.5039526306789697, -0.4879500364742666, -0.4364357804719847, -0.3333333333333333, 0.0, 0.0]
              B_pool: ACEbase.ObjectPools.VectorPool{Float64}
                arrays: Array{DataStructures.Stack{Vector{Float64}}}((1,))
            B_pool: ACEbase.ObjectPools.VectorPool{ComplexF64}
              arrays: Array{DataStructures.Stack{Vector{ComplexF64}}}((1,))
                1: DataStructures.Stack{Vector{ComplexF64}}
            dB_pool: ACEbase.ObjectPools.VectorPool{StaticArraysCore.SVector{3, ComplexF64}}
              arrays: Array{DataStructures.Stack{Vector{StaticArraysCore.SVector{3, ComplexF64}}}}((1,))
                1: DataStructures.Stack{Vector{StaticArraysCore.SVector{3, ComplexF64}}}
          B_pool: ACEbase.ObjectPools.VectorPool{ComplexF64}
            arrays: Array{DataStructures.Stack{Vector{ComplexF64}}}((1,))
              1: DataStructures.Stack{Vector{ComplexF64}}
                store: DataStructures.Deque{Vector{ComplexF64}}
          dB_pool: ACEbase.ObjectPools.VectorPool{ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, ComplexF64}}}}
            arrays: Array{DataStructures.Stack{Vector{ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, ComplexF64}}}}}}((1,))
              1: DataStructures.Stack{Vector{ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, ComplexF64}}}}}
                store: DataStructures.Deque{Vector{ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, ComplexF64}}}}}
      indices: Array{NTuple{4, Int64}}((180,))
        1: NTuple{4, Int64}
          1: Int64 1
          2: Int64 1
          3: Int64 1
          4: Int64 1
        2: NTuple{4, Int64}
          1: Int64 2
          2: Int64 1
          3: Int64 1
          4: Int64 1
        3: NTuple{4, Int64}
          1: Int64 1
          2: Int64 1
          3: Int64 1
          4: Int64 2
        4: NTuple{4, Int64}
          1: Int64 2
          2: Int64 1
          3: Int64 1
          4: Int64 2
        5: NTuple{4, Int64}
          1: Int64 1
          2: Int64 1
          3: Int64 2
          4: Int64 1
        ...
        176: NTuple{4, Int64}
          1: Int64 2
          2: Int64 1
          3: Int64 2
          4: Int64 25
        177: NTuple{4, Int64}
          1: Int64 1
          2: Int64 1
          3: Int64 1
          4: Int64 35
        178: NTuple{4, Int64}
          1: Int64 2
          2: Int64 1
          3: Int64 1
          4: Int64 35
        179: NTuple{4, Int64}
          1: Int64 1
          2: Int64 1
          3: Int64 1
          4: Int64 36
        180: NTuple{4, Int64}
          1: Int64 2
          2: Int64 1
          3: Int64 1
          4: Int64 36
    spec: ACE.PIBasisSpec
      orders: Array{Int64}((54,)) [1, 1, 1, 1, 1, 1, 1, 1, 1, 1  …  1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      iAA2iA: Array{Int64}((54, 1)) [3; 4; … ; 159; 160;;]
    real: identity (function of type typeof(identity))
    B_pool: ACEbase.ObjectPools.VectorPool{ComplexF64}
      arrays: Array{DataStructures.Stack{Vector{ComplexF64}}}((1,))
        1: DataStructures.Stack{Vector{ComplexF64}}
          store: DataStructures.Deque{Vector{ComplexF64}}
            nblocks: Int64 1
            blksize: Int64 1024
            len: Int64 0
            head: DataStructures.DequeBlock{Vector{ComplexF64}}
              data: Array{Vector{ComplexF64}}((1024,))
                1: #undef
                2: #undef
                3: #undef
                4: #undef
                5: #undef
                ...
                1020: #undef
                1021: #undef
                1022: #undef
                1023: #undef
                1024: #undef
              capa: Int64 1024
              front: Int64 1
              back: Int64 0
              prev: DataStructures.DequeBlock{Vector{ComplexF64}}#= circular reference @-1 =#
              next: DataStructures.DequeBlock{Vector{ComplexF64}}#= circular reference @-1 =#
            rear: DataStructures.DequeBlock{Vector{ComplexF64}}
              data: Array{Vector{ComplexF64}}((1024,))
                1: #undef
                2: #undef
                3: #undef
                4: #undef
                5: #undef
                ...
                1020: #undef
                1021: #undef
                1022: #undef
                1023: #undef
                1024: #undef
              capa: Int64 1024
              front: Int64 1
              back: Int64 0
              prev: DataStructures.DequeBlock{Vector{ComplexF64}}#= circular reference @-1 =#
              next: DataStructures.DequeBlock{Vector{ComplexF64}}#= circular reference @-1 =#
    dAA_pool: ACEbase.ObjectPools.VectorPool{ComplexF64}
      arrays: Array{DataStructures.Stack{Vector{ComplexF64}}}((1,))
        1: DataStructures.Stack{Vector{ComplexF64}}
          store: DataStructures.Deque{Vector{ComplexF64}}
            nblocks: Int64 1
            blksize: Int64 1024
            len: Int64 0
            head: DataStructures.DequeBlock{Vector{ComplexF64}}
              data: Array{Vector{ComplexF64}}((1024,))
                1: #undef
                2: #undef
                3: #undef
                4: #undef
                5: #undef
                ...
                1020: #undef
                1021: #undef
                1022: #undef
                1023: #undef
                1024: #undef
              capa: Int64 1024
              front: Int64 1
              back: Int64 0
              prev: DataStructures.DequeBlock{Vector{ComplexF64}}#= circular reference @-1 =#
              next: DataStructures.DequeBlock{Vector{ComplexF64}}#= circular reference @-1 =#
            rear: DataStructures.DequeBlock{Vector{ComplexF64}}
              data: Array{Vector{ComplexF64}}((1024,))
                1: #undef
                2: #undef
                3: #undef
                4: #undef
                5: #undef
                ...
                1020: #undef
                1021: #undef
                1022: #undef
                1023: #undef
                1024: #undef
              capa: Int64 1024
              front: Int64 1
              back: Int64 0
              prev: DataStructures.DequeBlock{Vector{ComplexF64}}#= circular reference @-1 =#
              next: DataStructures.DequeBlock{Vector{ComplexF64}}#= circular reference @-1 =#
  A2Bmap: SparseArrays.SparseMatrixCSC{ACE.SphericalMatrix{0, 1, 1, 3, ComplexF64, 3}, Int64}
    m: Int64 10
    n: Int64 54
    colptr: Array{Int64}((55,)) [1, 2, 3, 4, 5, 6, 7, 8, 9, 10  …  29, 29, 29, 29, 30, 31, 31, 31, 31, 31]
    rowval: Array{Int64}((30,)) [1, 2, 1, 2, 1, 2, 3, 4, 3, 4  …  7, 8, 7, 8, 9, 10, 9, 10, 9, 10]
    nzval: Array{ACE.SphericalMatrix{0, 1, 1, 3, ComplexF64, 3}}((30,))
      1: ACE.SphericalMatrix{0, 1, 1, 3, ComplexF64, 3}
        val: StaticArraysCore.SMatrix{1, 3, ComplexF64, 3}
          data: Tuple{ComplexF64, ComplexF64, ComplexF64}
            1: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            2: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            3: ComplexF64
              re: Float64 -0.5773502691896257
              im: Float64 0.0
        _valL1: Val{0} Val{0}()
        _valL2: Val{1} Val{1}()
      2: ACE.SphericalMatrix{0, 1, 1, 3, ComplexF64, 3}
        val: StaticArraysCore.SMatrix{1, 3, ComplexF64, 3}
          data: Tuple{ComplexF64, ComplexF64, ComplexF64}
            1: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            2: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            3: ComplexF64
              re: Float64 -0.5773502691896257
              im: Float64 0.0
        _valL1: Val{0} Val{0}()
        _valL2: Val{1} Val{1}()
      3: ACE.SphericalMatrix{0, 1, 1, 3, ComplexF64, 3}
        val: StaticArraysCore.SMatrix{1, 3, ComplexF64, 3}
          data: Tuple{ComplexF64, ComplexF64, ComplexF64}
            1: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            2: ComplexF64
              re: Float64 0.5773502691896257
              im: Float64 0.0
            3: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
        _valL1: Val{0} Val{0}()
        _valL2: Val{1} Val{1}()
      4: ACE.SphericalMatrix{0, 1, 1, 3, ComplexF64, 3}
        val: StaticArraysCore.SMatrix{1, 3, ComplexF64, 3}
          data: Tuple{ComplexF64, ComplexF64, ComplexF64}
            1: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            2: ComplexF64
              re: Float64 0.5773502691896257
              im: Float64 0.0
            3: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
        _valL1: Val{0} Val{0}()
        _valL2: Val{1} Val{1}()
      5: ACE.SphericalMatrix{0, 1, 1, 3, ComplexF64, 3}
        val: StaticArraysCore.SMatrix{1, 3, ComplexF64, 3}
          data: Tuple{ComplexF64, ComplexF64, ComplexF64}
            1: ComplexF64
              re: Float64 -0.5773502691896257
              im: Float64 0.0
            2: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            3: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
        _valL1: Val{0} Val{0}()
        _valL2: Val{1} Val{1}()
      ...
      26: ACE.SphericalMatrix{0, 1, 1, 3, ComplexF64, 3}
        val: StaticArraysCore.SMatrix{1, 3, ComplexF64, 3}
          data: Tuple{ComplexF64, ComplexF64, ComplexF64}
            1: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            2: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            3: ComplexF64
              re: Float64 -0.5773502691896257
              im: Float64 0.0
        _valL1: Val{0} Val{0}()
        _valL2: Val{1} Val{1}()
      27: ACE.SphericalMatrix{0, 1, 1, 3, ComplexF64, 3}
        val: StaticArraysCore.SMatrix{1, 3, ComplexF64, 3}
          data: Tuple{ComplexF64, ComplexF64, ComplexF64}
            1: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            2: ComplexF64
              re: Float64 0.5773502691896257
              im: Float64 0.0
            3: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
        _valL1: Val{0} Val{0}()
        _valL2: Val{1} Val{1}()
      28: ACE.SphericalMatrix{0, 1, 1, 3, ComplexF64, 3}
        val: StaticArraysCore.SMatrix{1, 3, ComplexF64, 3}
          data: Tuple{ComplexF64, ComplexF64, ComplexF64}
            1: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            2: ComplexF64
              re: Float64 0.5773502691896257
              im: Float64 0.0
            3: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
        _valL1: Val{0} Val{0}()
        _valL2: Val{1} Val{1}()
      29: ACE.SphericalMatrix{0, 1, 1, 3, ComplexF64, 3}
        val: StaticArraysCore.SMatrix{1, 3, ComplexF64, 3}
          data: Tuple{ComplexF64, ComplexF64, ComplexF64}
            1: ComplexF64
              re: Float64 -0.5773502691896257
              im: Float64 0.0
            2: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            3: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
        _valL1: Val{0} Val{0}()
        _valL2: Val{1} Val{1}()
      30: ACE.SphericalMatrix{0, 1, 1, 3, ComplexF64, 3}
        val: StaticArraysCore.SMatrix{1, 3, ComplexF64, 3}
          data: Tuple{ComplexF64, ComplexF64, ComplexF64}
            1: ComplexF64
              re: Float64 -0.5773502691896257
              im: Float64 0.0
            2: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            3: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
        _valL1: Val{0} Val{0}()
        _valL2: Val{1} Val{1}()
  symgrp: ACE.O3{:l, :m} ACE.O3{:l, :m}()
  real: identity (function of type typeof(identity))
  B_pool: ACEbase.ObjectPools.VectorPool{ACE.SphericalMatrix{0, 1, 1, 3, ComplexF64, 3}}
    arrays: Array{DataStructures.Stack{Vector{ACE.SphericalMatrix{0, 1, 1, 3, ComplexF64, 3}}}}((1,))
      1: DataStructures.Stack{Vector{ACE.SphericalMatrix{0, 1, 1, 3, ComplexF64, 3}}}
        store: DataStructures.Deque{Vector{ACE.SphericalMatrix{0, 1, 1, 3, ComplexF64, 3}}}
          nblocks: Int64 1
          blksize: Int64 1024
          len: Int64 0
          head: DataStructures.DequeBlock{Vector{ACE.SphericalMatrix{0, 1, 1, 3, ComplexF64, 3}}}
            data: Array{Vector{ACE.SphericalMatrix{0, 1, 1, 3, ComplexF64, 3}}}((1024,))
              1: #undef
              2: #undef
              3: #undef
              4: #undef
              5: #undef
              ...
              1020: #undef
              1021: #undef
              1022: #undef
              1023: #undef
              1024: #undef
            capa: Int64 1024
            front: Int64 1
            back: Int64 0
            prev: DataStructures.DequeBlock{Vector{ACE.SphericalMatrix{0, 1, 1, 3, ComplexF64, 3}}}#= circular reference @-1 =#
            next: DataStructures.DequeBlock{Vector{ACE.SphericalMatrix{0, 1, 1, 3, ComplexF64, 3}}}#= circular reference @-1 =#
          rear: DataStructures.DequeBlock{Vector{ACE.SphericalMatrix{0, 1, 1, 3, ComplexF64, 3}}}
            data: Array{Vector{ACE.SphericalMatrix{0, 1, 1, 3, ComplexF64, 3}}}((1024,))
              1: #undef
              2: #undef
              3: #undef
              4: #undef
              5: #undef
              ...
              1020: #undef
              1021: #undef
              1022: #undef
              1023: #undef
              1024: #undef
            capa: Int64 1024
            front: Int64 1
            back: Int64 0
            prev: DataStructures.DequeBlock{Vector{ACE.SphericalMatrix{0, 1, 1, 3, ComplexF64, 3}}}#= circular reference @-1 =#
            next: DataStructures.DequeBlock{Vector{ACE.SphericalMatrix{0, 1, 1, 3, ComplexF64, 3}}}#= circular reference @-1 =#
ComplexF64[0.005998729162709968 + 0.0im 0.05018876805485542 + 0.0im -0.023339440647759575 + 0.0im -0.10202689459372623 + 0.0im 0.04262919581978689 + 0.0im 0.030424691729956682 + 0.0im -0.04266646494281071 + 0.0im 0.0718277486910558 + 0.0im 0.013489254841034207 + 0.0im -0.01361684711125938 + 0.0im; 0.00014572552159587717 + 0.0im 0.05705706442247463 + 0.0im -0.0005669787833218804 + 0.0im -0.11324625462035295 + 0.0im 0.0010355796415460843 + 0.0im 0.024650807890240364 + 0.0im -0.0010364850103741733 + 0.0im 0.09748357776967055 + 0.0im 0.0003276908565682584 + 0.0im -0.030550542181974952 + 0.0im; 0.006395930696105131 + 0.0im 0.048797154951901664 + 0.0im -0.024884844909632848 + 0.0im -0.09891731090244667 + 0.0im 0.045451857334875646 + 0.0im 0.02868660208825433 + 0.0im -0.045491594206052755 + 0.0im 0.0708679591914485 + 0.0im 0.014382436140253994 + 0.0im -0.013469514798875749 + 0.0im; 0.006852471043007779 + 0.0im 0.046790015898344126 + 0.0im -0.026318602370297147 + 0.0im -0.09583560273525359 + 0.0im 0.04702444389559895 + 0.0im 0.02943980335614533 + 0.0im -0.0449839776518146 + 0.0im 0.06867806063158144 + 0.0im 0.010833237574254412 + 0.0im -0.017071998672690453 + 0.0im; -8.51547279332149e-5 + 0.0im 0.05247583758753191 + 0.0im 0.0003270577008438406 + 0.0im -0.10579862160783081 + 0.0im -0.0005843663841858151 + 0.0im 0.026300391342671647 + 0.0im 0.0005590097870173141 + 0.0im 0.0890810189841234 + 0.0im -0.00013462317352115342 + 0.0im -0.03196865574143572 + 0.0im; 0.007219387442543077 + 0.0im 0.048773948786589125 + 0.0im -0.027727835150983503 + 0.0im -0.10079293785926259 + 0.0im 0.049542373491511464 + 0.0im 0.03204503810328957 + 0.0im -0.04739265023330943 + 0.0im 0.07331417677574126 + 0.0im 0.011413304604251115 + 0.0im -0.02204920690524363 + 0.0im; 0.0075404622437073784 + 0.0im 0.04971496828228158 + 0.0im -0.028726287603166475 + 0.0im -0.09212064986774829 + 0.0im 0.050614318404524364 + 0.0im 0.011558299314674765 + 0.0im -0.04700977849132968 + 0.0im 0.07148687187354295 + 0.0im 0.009003428721887781 + 0.0im 0.007845633391287578 + 0.0im; -0.00034260806204230456 + 0.0im 0.05819030543102471 + 0.0im 0.0013052061541192538 + 0.0im -0.1062000919877564 + 0.0im -0.0022997096172237244 + 0.0im 0.006908497737876726 + 0.0im 0.00213593392359906 + 0.0im 0.09584398734451392 + 0.0im -0.00040907933312923575 + 0.0im -0.0038926094058767207 + 0.0im; 0.007631514202671744 + 0.0im 0.050404423519450806 + 0.0im -0.029073160868426155 + 0.0im -0.09351523538867812 + 0.0im 0.0512254921884955 + 0.0im 0.012372264715708266 + 0.0im -0.04757742703644221 + 0.0im 0.07104407057766911 + 0.0im 0.009112146171299854 + 0.0im 0.009272380154636191 + 0.0im; 0.007974947640934012 + 0.0im 0.04324669592131212 + 0.0im -0.030282939890318997 + 0.0im -0.09299624218827193 + 0.0im 0.05305878984566825 + 0.0im 0.03700784518535047 + 0.0im -0.048690895940278985 + 0.0im 0.06238792039321367 + 0.0im 0.008344764332592553 + 0.0im -0.028201626468106825 + 0.0im; -0.0004315701113195874 + 0.0im 0.046905404198642815 + 0.0im 0.0016387833911870925 + 0.0im -0.09787673870589952 + 0.0im -0.002871315132232743 + 0.0im 0.030397057726589585 + 0.0im 0.0026349433660652326 + 0.0im 0.08079455556470629 + 0.0im -0.00045158301146299535 + 0.0im -0.04126339621176667 + 0.0im; 0.007640326625903646 + 0.0im 0.05035972179285143 + 0.0im -0.029012297305508836 + 0.0im -0.10785617639290078 + 0.0im 0.05083249483862531 + 0.0im 0.04251591181862011 + 0.0im -0.04664787349601302 + 0.0im 0.07149668456340974 + 0.0im 0.007994626170326917 + 0.0im -0.030619519404852497 + 0.0im]
ACE.SymmetricBasis{ACE.Product1pBasis{4, Tuple{ACE.Categorical1pBasis{:be, :be, 2, Symbol}, ACE.CylindricalBondEnvelope{Float64}, ACE.Rn1pBasis{Float64, ACE.Transforms.PolyTransform{Int64, Float64}, ACE.OrthPolys.OrthPolyBasis{Float64}, :rr, :n, ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, Float64}}}}, ACE.Ylm1pBasis{Float64, :rr, :l, :m, ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, ComplexF64}}}}}}, ACE.SphericalMatrix{1, 0, 3, 1, ComplexF64, 3}, ACE.O3{:l, :m}, typeof(identity), ACE.SphericalMatrix{1, 0, 3, 1, ComplexF64, 3}}
  pibasis: ACE.PIBasis{ACE.Product1pBasis{4, Tuple{ACE.Categorical1pBasis{:be, :be, 2, Symbol}, ACE.CylindricalBondEnvelope{Float64}, ACE.Rn1pBasis{Float64, ACE.Transforms.PolyTransform{Int64, Float64}, ACE.OrthPolys.OrthPolyBasis{Float64}, :rr, :n, ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, Float64}}}}, ACE.Ylm1pBasis{Float64, :rr, :l, :m, ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, ComplexF64}}}}}}, typeof(identity), ComplexF64, ComplexF64}
    basis1p: ACE.Product1pBasis{4, Tuple{ACE.Categorical1pBasis{:be, :be, 2, Symbol}, ACE.CylindricalBondEnvelope{Float64}, ACE.Rn1pBasis{Float64, ACE.Transforms.PolyTransform{Int64, Float64}, ACE.OrthPolys.OrthPolyBasis{Float64}, :rr, :n, ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, Float64}}}}, ACE.Ylm1pBasis{Float64, :rr, :l, :m, ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, ComplexF64}}}}}}
      bases: Tuple{ACE.Categorical1pBasis{:be, :be, 2, Symbol}, ACE.CylindricalBondEnvelope{Float64}, ACE.Rn1pBasis{Float64, ACE.Transforms.PolyTransform{Int64, Float64}, ACE.OrthPolys.OrthPolyBasis{Float64}, :rr, :n, ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, Float64}}}}, ACE.Ylm1pBasis{Float64, :rr, :l, :m, ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, ComplexF64}}}}}
        1: ACE.Categorical1pBasis{:be, :be, 2, Symbol}
          categories: ACE.SList{2, Symbol}
            list: StaticArraysCore.SVector{2, Symbol}
              data: Tuple{Symbol, Symbol}
                1: Symbol bond
                2: Symbol env
        2: ACE.CylindricalBondEnvelope{Float64}
          r0cut: Float64 5.0
          rcut: Float64 2.5
          zcut: Float64 2.5
          p0: Int64 2
          pr: Int64 2
          pz: Int64 2
          floppy: Bool true
          λ: Float64 0.5
        3: ACE.Rn1pBasis{Float64, ACE.Transforms.PolyTransform{Int64, Float64}, ACE.OrthPolys.OrthPolyBasis{Float64}, :rr, :n, ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, Float64}}}}
          R: ACE.OrthPolys.TransformedPolys{Float64, ACE.Transforms.PolyTransform{Int64, Float64}, ACE.OrthPolys.OrthPolyBasis{Float64}}
            J: ACE.OrthPolys.OrthPolyBasis{Float64}
              pl: Int64 2
              tl: Float64 0.130253743325013
              pr: Int64 0
              tr: Float64 0.5155555555555555
              A: Array{Float64}((5,)) [15.06201513840524, 18.425320414760744, 13.733447018522865, 12.297018332188836, 11.638633666376187]
              B: Array{Float64}((5,)) [0.0, -8.316055613226847, -5.316508132568968, -4.4445604332463855, -4.057112624662007]
              C: Array{Float64}((5,)) [0.0, 0.0, -0.745357296881543, -0.895406544009211, -0.9464598126125044]
              tdf: Array{Float64}((1000,)) [0.13044639423112828, 0.1308316960433588, 0.13121699785558935, 0.13160229966781992, 0.13198760148005045, 0.132372903292281, 0.13275820510451153, 0.13314350691674207, 0.1335288087289726, 0.13391411054120317  …  0.5118951883393653, 0.5122804901515959, 0.5126657919638264, 0.513051093776057, 0.5134363955882876, 0.5138216974005181, 0.5142069992127486, 0.5145923010249791, 0.5149776028372097, 0.5153629046494402]
              ww: Array{Float64}((1000,)) [0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001  …  0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001]
              B_pool: ACEbase.ObjectPools.VectorPool{Float64}
                arrays: Array{DataStructures.Stack{Vector{Float64}}}((1,))
              dB_pool: ACEbase.ObjectPools.VectorPool{Float64}
                arrays: Array{DataStructures.Stack{Vector{Float64}}}((1,))
            trans: ACE.Transforms.PolyTransform{Int64, Float64}
              p: Int64 1
              r0: Float64 0.16
            rl: Float64 1.25
            ru: Float64 7.905694150420948
            B_pool: ACEbase.ObjectPools.VectorPool{Float64}
              arrays: Array{DataStructures.Stack{Vector{Float64}}}((1,))
                1: DataStructures.Stack{Vector{Float64}}
            dB_pool: ACEbase.ObjectPools.VectorPool{Float64}
              arrays: Array{DataStructures.Stack{Vector{Float64}}}((1,))
                1: DataStructures.Stack{Vector{Float64}}
          B_pool: ACEbase.ObjectPools.VectorPool{Float64}
            arrays: Array{DataStructures.Stack{Vector{Float64}}}((1,))
              1: DataStructures.Stack{Vector{Float64}}
                store: DataStructures.Deque{Vector{Float64}}
          dB_pool: ACEbase.ObjectPools.VectorPool{ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, Float64}}}}
            arrays: Array{DataStructures.Stack{Vector{ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, Float64}}}}}}((1,))
              1: DataStructures.Stack{Vector{ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, Float64}}}}}
                store: DataStructures.Deque{Vector{ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, Float64}}}}}
        4: ACE.Ylm1pBasis{Float64, :rr, :l, :m, ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, ComplexF64}}}}
          SH: ACE.SphericalHarmonics.SHBasis{Float64}
            alp: ACE.SphericalHarmonics.ALPolynomials{Float64}
              L: Int64 5
              A: Array{Float64}((21,)) [0.0, 0.0, 0.0, 1.9364916731037085, 0.0, 0.0, 1.9720265943665387, 2.091650066335189, 0.0, 0.0  …  2.04939015319192, 2.29128784747792, 0.0, 0.0, 1.98997487421324, 2.03100960115899, 2.1712405933672376, 2.48746859276655, 0.0, 0.0]
              B: Array{Float64}((21,)) [0.0, 0.0, 0.0, -0.5773502691896257, 0.0, 0.0, -0.5163977794943222, -0.4472135954999579, 0.0, 0.0  …  -0.47809144373375745, -0.3779644730092272, 0.0, 0.0, -0.5039526306789697, -0.4879500364742666, -0.4364357804719847, -0.3333333333333333, 0.0, 0.0]
              B_pool: ACEbase.ObjectPools.VectorPool{Float64}
                arrays: Array{DataStructures.Stack{Vector{Float64}}}((1,))
            B_pool: ACEbase.ObjectPools.VectorPool{ComplexF64}
              arrays: Array{DataStructures.Stack{Vector{ComplexF64}}}((1,))
                1: DataStructures.Stack{Vector{ComplexF64}}
            dB_pool: ACEbase.ObjectPools.VectorPool{StaticArraysCore.SVector{3, ComplexF64}}
              arrays: Array{DataStructures.Stack{Vector{StaticArraysCore.SVector{3, ComplexF64}}}}((1,))
                1: DataStructures.Stack{Vector{StaticArraysCore.SVector{3, ComplexF64}}}
          B_pool: ACEbase.ObjectPools.VectorPool{ComplexF64}
            arrays: Array{DataStructures.Stack{Vector{ComplexF64}}}((1,))
              1: DataStructures.Stack{Vector{ComplexF64}}
                store: DataStructures.Deque{Vector{ComplexF64}}
          dB_pool: ACEbase.ObjectPools.VectorPool{ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, ComplexF64}}}}
            arrays: Array{DataStructures.Stack{Vector{ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, ComplexF64}}}}}}((1,))
              1: DataStructures.Stack{Vector{ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, ComplexF64}}}}}
                store: DataStructures.Deque{Vector{ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, ComplexF64}}}}}
      indices: Array{NTuple{4, Int64}}((180,))
        1: NTuple{4, Int64}
          1: Int64 1
          2: Int64 1
          3: Int64 1
          4: Int64 1
        2: NTuple{4, Int64}
          1: Int64 2
          2: Int64 1
          3: Int64 1
          4: Int64 1
        3: NTuple{4, Int64}
          1: Int64 1
          2: Int64 1
          3: Int64 1
          4: Int64 2
        4: NTuple{4, Int64}
          1: Int64 2
          2: Int64 1
          3: Int64 1
          4: Int64 2
        5: NTuple{4, Int64}
          1: Int64 1
          2: Int64 1
          3: Int64 2
          4: Int64 1
        ...
        176: NTuple{4, Int64}
          1: Int64 2
          2: Int64 1
          3: Int64 2
          4: Int64 25
        177: NTuple{4, Int64}
          1: Int64 1
          2: Int64 1
          3: Int64 1
          4: Int64 35
        178: NTuple{4, Int64}
          1: Int64 2
          2: Int64 1
          3: Int64 1
          4: Int64 35
        179: NTuple{4, Int64}
          1: Int64 1
          2: Int64 1
          3: Int64 1
          4: Int64 36
        180: NTuple{4, Int64}
          1: Int64 2
          2: Int64 1
          3: Int64 1
          4: Int64 36
    spec: ACE.PIBasisSpec
      orders: Array{Int64}((54,)) [1, 1, 1, 1, 1, 1, 1, 1, 1, 1  …  1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      iAA2iA: Array{Int64}((54, 1)) [3; 4; … ; 159; 160;;]
    real: identity (function of type typeof(identity))
    B_pool: ACEbase.ObjectPools.VectorPool{ComplexF64}
      arrays: Array{DataStructures.Stack{Vector{ComplexF64}}}((1,))
        1: DataStructures.Stack{Vector{ComplexF64}}
          store: DataStructures.Deque{Vector{ComplexF64}}
            nblocks: Int64 1
            blksize: Int64 1024
            len: Int64 0
            head: DataStructures.DequeBlock{Vector{ComplexF64}}
              data: Array{Vector{ComplexF64}}((1024,))
                1: #undef
                2: #undef
                3: #undef
                4: #undef
                5: #undef
                ...
                1020: #undef
                1021: #undef
                1022: #undef
                1023: #undef
                1024: #undef
              capa: Int64 1024
              front: Int64 1
              back: Int64 0
              prev: DataStructures.DequeBlock{Vector{ComplexF64}}#= circular reference @-1 =#
              next: DataStructures.DequeBlock{Vector{ComplexF64}}#= circular reference @-1 =#
            rear: DataStructures.DequeBlock{Vector{ComplexF64}}
              data: Array{Vector{ComplexF64}}((1024,))
                1: #undef
                2: #undef
                3: #undef
                4: #undef
                5: #undef
                ...
                1020: #undef
                1021: #undef
                1022: #undef
                1023: #undef
                1024: #undef
              capa: Int64 1024
              front: Int64 1
              back: Int64 0
              prev: DataStructures.DequeBlock{Vector{ComplexF64}}#= circular reference @-1 =#
              next: DataStructures.DequeBlock{Vector{ComplexF64}}#= circular reference @-1 =#
    dAA_pool: ACEbase.ObjectPools.VectorPool{ComplexF64}
      arrays: Array{DataStructures.Stack{Vector{ComplexF64}}}((1,))
        1: DataStructures.Stack{Vector{ComplexF64}}
          store: DataStructures.Deque{Vector{ComplexF64}}
            nblocks: Int64 1
            blksize: Int64 1024
            len: Int64 0
            head: DataStructures.DequeBlock{Vector{ComplexF64}}
              data: Array{Vector{ComplexF64}}((1024,))
                1: #undef
                2: #undef
                3: #undef
                4: #undef
                5: #undef
                ...
                1020: #undef
                1021: #undef
                1022: #undef
                1023: #undef
                1024: #undef
              capa: Int64 1024
              front: Int64 1
              back: Int64 0
              prev: DataStructures.DequeBlock{Vector{ComplexF64}}#= circular reference @-1 =#
              next: DataStructures.DequeBlock{Vector{ComplexF64}}#= circular reference @-1 =#
            rear: DataStructures.DequeBlock{Vector{ComplexF64}}
              data: Array{Vector{ComplexF64}}((1024,))
                1: #undef
                2: #undef
                3: #undef
                4: #undef
                5: #undef
                ...
                1020: #undef
                1021: #undef
                1022: #undef
                1023: #undef
                1024: #undef
              capa: Int64 1024
              front: Int64 1
              back: Int64 0
              prev: DataStructures.DequeBlock{Vector{ComplexF64}}#= circular reference @-1 =#
              next: DataStructures.DequeBlock{Vector{ComplexF64}}#= circular reference @-1 =#
  A2Bmap: SparseArrays.SparseMatrixCSC{ACE.SphericalMatrix{1, 0, 3, 1, ComplexF64, 3}, Int64}
    m: Int64 10
    n: Int64 54
    colptr: Array{Int64}((55,)) [1, 2, 3, 4, 5, 6, 7, 8, 9, 10  …  29, 29, 29, 29, 30, 31, 31, 31, 31, 31]
    rowval: Array{Int64}((30,)) [1, 2, 1, 2, 1, 2, 3, 4, 3, 4  …  7, 8, 7, 8, 9, 10, 9, 10, 9, 10]
    nzval: Array{ACE.SphericalMatrix{1, 0, 3, 1, ComplexF64, 3}}((30,))
      1: ACE.SphericalMatrix{1, 0, 3, 1, ComplexF64, 3}
        val: StaticArraysCore.SMatrix{3, 1, ComplexF64, 3}
          data: Tuple{ComplexF64, ComplexF64, ComplexF64}
            1: ComplexF64
              re: Float64 -0.5773502691896257
              im: Float64 0.0
            2: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            3: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
        _valL1: Val{1} Val{1}()
        _valL2: Val{0} Val{0}()
      2: ACE.SphericalMatrix{1, 0, 3, 1, ComplexF64, 3}
        val: StaticArraysCore.SMatrix{3, 1, ComplexF64, 3}
          data: Tuple{ComplexF64, ComplexF64, ComplexF64}
            1: ComplexF64
              re: Float64 -0.5773502691896257
              im: Float64 0.0
            2: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            3: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
        _valL1: Val{1} Val{1}()
        _valL2: Val{0} Val{0}()
      3: ACE.SphericalMatrix{1, 0, 3, 1, ComplexF64, 3}
        val: StaticArraysCore.SMatrix{3, 1, ComplexF64, 3}
          data: Tuple{ComplexF64, ComplexF64, ComplexF64}
            1: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            2: ComplexF64
              re: Float64 -0.5773502691896257
              im: Float64 0.0
            3: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
        _valL1: Val{1} Val{1}()
        _valL2: Val{0} Val{0}()
      4: ACE.SphericalMatrix{1, 0, 3, 1, ComplexF64, 3}
        val: StaticArraysCore.SMatrix{3, 1, ComplexF64, 3}
          data: Tuple{ComplexF64, ComplexF64, ComplexF64}
            1: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            2: ComplexF64
              re: Float64 -0.5773502691896257
              im: Float64 0.0
            3: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
        _valL1: Val{1} Val{1}()
        _valL2: Val{0} Val{0}()
      5: ACE.SphericalMatrix{1, 0, 3, 1, ComplexF64, 3}
        val: StaticArraysCore.SMatrix{3, 1, ComplexF64, 3}
          data: Tuple{ComplexF64, ComplexF64, ComplexF64}
            1: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            2: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            3: ComplexF64
              re: Float64 -0.5773502691896257
              im: Float64 0.0
        _valL1: Val{1} Val{1}()
        _valL2: Val{0} Val{0}()
      ...
      26: ACE.SphericalMatrix{1, 0, 3, 1, ComplexF64, 3}
        val: StaticArraysCore.SMatrix{3, 1, ComplexF64, 3}
          data: Tuple{ComplexF64, ComplexF64, ComplexF64}
            1: ComplexF64
              re: Float64 -0.5773502691896257
              im: Float64 0.0
            2: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            3: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
        _valL1: Val{1} Val{1}()
        _valL2: Val{0} Val{0}()
      27: ACE.SphericalMatrix{1, 0, 3, 1, ComplexF64, 3}
        val: StaticArraysCore.SMatrix{3, 1, ComplexF64, 3}
          data: Tuple{ComplexF64, ComplexF64, ComplexF64}
            1: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            2: ComplexF64
              re: Float64 -0.5773502691896257
              im: Float64 0.0
            3: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
        _valL1: Val{1} Val{1}()
        _valL2: Val{0} Val{0}()
      28: ACE.SphericalMatrix{1, 0, 3, 1, ComplexF64, 3}
        val: StaticArraysCore.SMatrix{3, 1, ComplexF64, 3}
          data: Tuple{ComplexF64, ComplexF64, ComplexF64}
            1: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            2: ComplexF64
              re: Float64 -0.5773502691896257
              im: Float64 0.0
            3: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
        _valL1: Val{1} Val{1}()
        _valL2: Val{0} Val{0}()
      29: ACE.SphericalMatrix{1, 0, 3, 1, ComplexF64, 3}
        val: StaticArraysCore.SMatrix{3, 1, ComplexF64, 3}
          data: Tuple{ComplexF64, ComplexF64, ComplexF64}
            1: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            2: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            3: ComplexF64
              re: Float64 -0.5773502691896257
              im: Float64 0.0
        _valL1: Val{1} Val{1}()
        _valL2: Val{0} Val{0}()
      30: ACE.SphericalMatrix{1, 0, 3, 1, ComplexF64, 3}
        val: StaticArraysCore.SMatrix{3, 1, ComplexF64, 3}
          data: Tuple{ComplexF64, ComplexF64, ComplexF64}
            1: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            2: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            3: ComplexF64
              re: Float64 -0.5773502691896257
              im: Float64 0.0
        _valL1: Val{1} Val{1}()
        _valL2: Val{0} Val{0}()
  symgrp: ACE.O3{:l, :m} ACE.O3{:l, :m}()
  real: identity (function of type typeof(identity))
  B_pool: ACEbase.ObjectPools.VectorPool{ACE.SphericalMatrix{1, 0, 3, 1, ComplexF64, 3}}
    arrays: Array{DataStructures.Stack{Vector{ACE.SphericalMatrix{1, 0, 3, 1, ComplexF64, 3}}}}((1,))
      1: DataStructures.Stack{Vector{ACE.SphericalMatrix{1, 0, 3, 1, ComplexF64, 3}}}
        store: DataStructures.Deque{Vector{ACE.SphericalMatrix{1, 0, 3, 1, ComplexF64, 3}}}
          nblocks: Int64 1
          blksize: Int64 1024
          len: Int64 0
          head: DataStructures.DequeBlock{Vector{ACE.SphericalMatrix{1, 0, 3, 1, ComplexF64, 3}}}
            data: Array{Vector{ACE.SphericalMatrix{1, 0, 3, 1, ComplexF64, 3}}}((1024,))
              1: #undef
              2: #undef
              3: #undef
              4: #undef
              5: #undef
              ...
              1020: #undef
              1021: #undef
              1022: #undef
              1023: #undef
              1024: #undef
            capa: Int64 1024
            front: Int64 1
            back: Int64 0
            prev: DataStructures.DequeBlock{Vector{ACE.SphericalMatrix{1, 0, 3, 1, ComplexF64, 3}}}#= circular reference @-1 =#
            next: DataStructures.DequeBlock{Vector{ACE.SphericalMatrix{1, 0, 3, 1, ComplexF64, 3}}}#= circular reference @-1 =#
          rear: DataStructures.DequeBlock{Vector{ACE.SphericalMatrix{1, 0, 3, 1, ComplexF64, 3}}}
            data: Array{Vector{ACE.SphericalMatrix{1, 0, 3, 1, ComplexF64, 3}}}((1024,))
              1: #undef
              2: #undef
              3: #undef
              4: #undef
              5: #undef
              ...
              1020: #undef
              1021: #undef
              1022: #undef
              1023: #undef
              1024: #undef
            capa: Int64 1024
            front: Int64 1
            back: Int64 0
            prev: DataStructures.DequeBlock{Vector{ACE.SphericalMatrix{1, 0, 3, 1, ComplexF64, 3}}}#= circular reference @-1 =#
            next: DataStructures.DequeBlock{Vector{ACE.SphericalMatrix{1, 0, 3, 1, ComplexF64, 3}}}#= circular reference @-1 =#
ComplexF64[-0.005998729162709968 + 0.0im -0.05018876805485542 + 0.0im 0.023339440647759575 + 0.0im 0.10202689459372623 + 0.0im -0.04262919581978689 + 0.0im -0.030424691729956682 + 0.0im 0.04266646494281071 + 0.0im -0.0718277486910558 + 0.0im -0.013489254841034207 + 0.0im 0.01361684711125938 + 0.0im; -0.00014572552159587717 + 0.0im -0.05705706442247463 + 0.0im 0.0005669787833218804 + 0.0im 0.11324625462035295 + 0.0im -0.0010355796415460843 + 0.0im -0.024650807890240364 + 0.0im 0.0010364850103741733 + 0.0im -0.09748357776967055 + 0.0im -0.0003276908565682584 + 0.0im 0.030550542181974952 + 0.0im; -0.006395930696105131 + 0.0im -0.048797154951901664 + 0.0im 0.024884844909632848 + 0.0im 0.09891731090244667 + 0.0im -0.045451857334875646 + 0.0im -0.02868660208825433 + 0.0im 0.045491594206052755 + 0.0im -0.0708679591914485 + 0.0im -0.014382436140253994 + 0.0im 0.013469514798875749 + 0.0im; -0.006852471043007779 + 0.0im -0.046790015898344126 + 0.0im 0.026318602370297147 + 0.0im 0.09583560273525359 + 0.0im -0.04702444389559895 + 0.0im -0.02943980335614533 + 0.0im 0.0449839776518146 + 0.0im -0.06867806063158144 + 0.0im -0.010833237574254412 + 0.0im 0.017071998672690453 + 0.0im; 8.51547279332149e-5 + 0.0im -0.05247583758753191 + 0.0im -0.0003270577008438406 + 0.0im 0.10579862160783081 + 0.0im 0.0005843663841858151 + 0.0im -0.026300391342671647 + 0.0im -0.0005590097870173141 + 0.0im -0.0890810189841234 + 0.0im 0.00013462317352115342 + 0.0im 0.03196865574143572 + 0.0im; -0.007219387442543077 + 0.0im -0.048773948786589125 + 0.0im 0.027727835150983503 + 0.0im 0.10079293785926259 + 0.0im -0.049542373491511464 + 0.0im -0.03204503810328957 + 0.0im 0.04739265023330943 + 0.0im -0.07331417677574126 + 0.0im -0.011413304604251115 + 0.0im 0.02204920690524363 + 0.0im; -0.0075404622437073784 + 0.0im -0.04971496828228158 + 0.0im 0.028726287603166475 + 0.0im 0.09212064986774829 + 0.0im -0.050614318404524364 + 0.0im -0.011558299314674765 + 0.0im 0.04700977849132968 + 0.0im -0.07148687187354295 + 0.0im -0.009003428721887781 + 0.0im -0.007845633391287578 + 0.0im; 0.00034260806204230456 + 0.0im -0.05819030543102471 + 0.0im -0.0013052061541192538 + 0.0im 0.1062000919877564 + 0.0im 0.0022997096172237244 + 0.0im -0.006908497737876726 + 0.0im -0.00213593392359906 + 0.0im -0.09584398734451392 + 0.0im 0.00040907933312923575 + 0.0im 0.0038926094058767207 + 0.0im; -0.007631514202671744 + 0.0im -0.050404423519450806 + 0.0im 0.029073160868426155 + 0.0im 0.09351523538867812 + 0.0im -0.0512254921884955 + 0.0im -0.012372264715708266 + 0.0im 0.04757742703644221 + 0.0im -0.07104407057766911 + 0.0im -0.009112146171299854 + 0.0im -0.009272380154636191 + 0.0im; -0.007974947640934012 + 0.0im -0.04324669592131212 + 0.0im 0.030282939890318997 + 0.0im 0.09299624218827193 + 0.0im -0.05305878984566825 + 0.0im -0.03700784518535047 + 0.0im 0.048690895940278985 + 0.0im -0.06238792039321367 + 0.0im -0.008344764332592553 + 0.0im 0.028201626468106825 + 0.0im; 0.0004315701113195874 + 0.0im -0.046905404198642815 + 0.0im -0.0016387833911870925 + 0.0im 0.09787673870589952 + 0.0im 0.002871315132232743 + 0.0im -0.030397057726589585 + 0.0im -0.0026349433660652326 + 0.0im -0.08079455556470629 + 0.0im 0.00045158301146299535 + 0.0im 0.04126339621176667 + 0.0im; -0.007640326625903646 + 0.0im -0.05035972179285143 + 0.0im 0.029012297305508836 + 0.0im 0.10785617639290078 + 0.0im -0.05083249483862531 + 0.0im -0.04251591181862011 + 0.0im 0.04664787349601302 + 0.0im -0.07149668456340974 + 0.0im -0.007994626170326917 + 0.0im 0.030619519404852497 + 0.0im]
ACE.SymmetricBasis{ACE.Product1pBasis{4, Tuple{ACE.Categorical1pBasis{:be, :be, 2, Symbol}, ACE.CylindricalBondEnvelope{Float64}, ACE.Rn1pBasis{Float64, ACE.Transforms.PolyTransform{Int64, Float64}, ACE.OrthPolys.OrthPolyBasis{Float64}, :rr, :n, ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, Float64}}}}, ACE.Ylm1pBasis{Float64, :rr, :l, :m, ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, ComplexF64}}}}}}, ACE.SphericalMatrix{1, 1, 3, 3, ComplexF64, 9}, ACE.O3{:l, :m}, typeof(identity), ACE.SphericalMatrix{1, 1, 3, 3, ComplexF64, 9}}
  pibasis: ACE.PIBasis{ACE.Product1pBasis{4, Tuple{ACE.Categorical1pBasis{:be, :be, 2, Symbol}, ACE.CylindricalBondEnvelope{Float64}, ACE.Rn1pBasis{Float64, ACE.Transforms.PolyTransform{Int64, Float64}, ACE.OrthPolys.OrthPolyBasis{Float64}, :rr, :n, ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, Float64}}}}, ACE.Ylm1pBasis{Float64, :rr, :l, :m, ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, ComplexF64}}}}}}, typeof(identity), ComplexF64, ComplexF64}
    basis1p: ACE.Product1pBasis{4, Tuple{ACE.Categorical1pBasis{:be, :be, 2, Symbol}, ACE.CylindricalBondEnvelope{Float64}, ACE.Rn1pBasis{Float64, ACE.Transforms.PolyTransform{Int64, Float64}, ACE.OrthPolys.OrthPolyBasis{Float64}, :rr, :n, ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, Float64}}}}, ACE.Ylm1pBasis{Float64, :rr, :l, :m, ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, ComplexF64}}}}}}
      bases: Tuple{ACE.Categorical1pBasis{:be, :be, 2, Symbol}, ACE.CylindricalBondEnvelope{Float64}, ACE.Rn1pBasis{Float64, ACE.Transforms.PolyTransform{Int64, Float64}, ACE.OrthPolys.OrthPolyBasis{Float64}, :rr, :n, ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, Float64}}}}, ACE.Ylm1pBasis{Float64, :rr, :l, :m, ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, ComplexF64}}}}}
        1: ACE.Categorical1pBasis{:be, :be, 2, Symbol}
          categories: ACE.SList{2, Symbol}
            list: StaticArraysCore.SVector{2, Symbol}
              data: Tuple{Symbol, Symbol}
                1: Symbol bond
                2: Symbol env
        2: ACE.CylindricalBondEnvelope{Float64}
          r0cut: Float64 5.0
          rcut: Float64 2.5
          zcut: Float64 2.5
          p0: Int64 2
          pr: Int64 2
          pz: Int64 2
          floppy: Bool true
          λ: Float64 0.5
        3: ACE.Rn1pBasis{Float64, ACE.Transforms.PolyTransform{Int64, Float64}, ACE.OrthPolys.OrthPolyBasis{Float64}, :rr, :n, ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, Float64}}}}
          R: ACE.OrthPolys.TransformedPolys{Float64, ACE.Transforms.PolyTransform{Int64, Float64}, ACE.OrthPolys.OrthPolyBasis{Float64}}
            J: ACE.OrthPolys.OrthPolyBasis{Float64}
              pl: Int64 2
              tl: Float64 0.130253743325013
              pr: Int64 0
              tr: Float64 0.5155555555555555
              A: Array{Float64}((5,)) [15.06201513840524, 18.425320414760744, 13.733447018522865, 12.297018332188836, 11.638633666376187]
              B: Array{Float64}((5,)) [0.0, -8.316055613226847, -5.316508132568968, -4.4445604332463855, -4.057112624662007]
              C: Array{Float64}((5,)) [0.0, 0.0, -0.745357296881543, -0.895406544009211, -0.9464598126125044]
              tdf: Array{Float64}((1000,)) [0.13044639423112828, 0.1308316960433588, 0.13121699785558935, 0.13160229966781992, 0.13198760148005045, 0.132372903292281, 0.13275820510451153, 0.13314350691674207, 0.1335288087289726, 0.13391411054120317  …  0.5118951883393653, 0.5122804901515959, 0.5126657919638264, 0.513051093776057, 0.5134363955882876, 0.5138216974005181, 0.5142069992127486, 0.5145923010249791, 0.5149776028372097, 0.5153629046494402]
              ww: Array{Float64}((1000,)) [0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001  …  0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001]
              B_pool: ACEbase.ObjectPools.VectorPool{Float64}
                arrays: Array{DataStructures.Stack{Vector{Float64}}}((1,))
              dB_pool: ACEbase.ObjectPools.VectorPool{Float64}
                arrays: Array{DataStructures.Stack{Vector{Float64}}}((1,))
            trans: ACE.Transforms.PolyTransform{Int64, Float64}
              p: Int64 1
              r0: Float64 0.16
            rl: Float64 1.25
            ru: Float64 7.905694150420948
            B_pool: ACEbase.ObjectPools.VectorPool{Float64}
              arrays: Array{DataStructures.Stack{Vector{Float64}}}((1,))
                1: DataStructures.Stack{Vector{Float64}}
            dB_pool: ACEbase.ObjectPools.VectorPool{Float64}
              arrays: Array{DataStructures.Stack{Vector{Float64}}}((1,))
                1: DataStructures.Stack{Vector{Float64}}
          B_pool: ACEbase.ObjectPools.VectorPool{Float64}
            arrays: Array{DataStructures.Stack{Vector{Float64}}}((1,))
              1: DataStructures.Stack{Vector{Float64}}
                store: DataStructures.Deque{Vector{Float64}}
          dB_pool: ACEbase.ObjectPools.VectorPool{ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, Float64}}}}
            arrays: Array{DataStructures.Stack{Vector{ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, Float64}}}}}}((1,))
              1: DataStructures.Stack{Vector{ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, Float64}}}}}
                store: DataStructures.Deque{Vector{ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, Float64}}}}}
        4: ACE.Ylm1pBasis{Float64, :rr, :l, :m, ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, ComplexF64}}}}
          SH: ACE.SphericalHarmonics.SHBasis{Float64}
            alp: ACE.SphericalHarmonics.ALPolynomials{Float64}
              L: Int64 5
              A: Array{Float64}((21,)) [0.0, 0.0, 0.0, 1.9364916731037085, 0.0, 0.0, 1.9720265943665387, 2.091650066335189, 0.0, 0.0  …  2.04939015319192, 2.29128784747792, 0.0, 0.0, 1.98997487421324, 2.03100960115899, 2.1712405933672376, 2.48746859276655, 0.0, 0.0]
              B: Array{Float64}((21,)) [0.0, 0.0, 0.0, -0.5773502691896257, 0.0, 0.0, -0.5163977794943222, -0.4472135954999579, 0.0, 0.0  …  -0.47809144373375745, -0.3779644730092272, 0.0, 0.0, -0.5039526306789697, -0.4879500364742666, -0.4364357804719847, -0.3333333333333333, 0.0, 0.0]
              B_pool: ACEbase.ObjectPools.VectorPool{Float64}
                arrays: Array{DataStructures.Stack{Vector{Float64}}}((1,))
            B_pool: ACEbase.ObjectPools.VectorPool{ComplexF64}
              arrays: Array{DataStructures.Stack{Vector{ComplexF64}}}((1,))
                1: DataStructures.Stack{Vector{ComplexF64}}
            dB_pool: ACEbase.ObjectPools.VectorPool{StaticArraysCore.SVector{3, ComplexF64}}
              arrays: Array{DataStructures.Stack{Vector{StaticArraysCore.SVector{3, ComplexF64}}}}((1,))
                1: DataStructures.Stack{Vector{StaticArraysCore.SVector{3, ComplexF64}}}
          B_pool: ACEbase.ObjectPools.VectorPool{ComplexF64}
            arrays: Array{DataStructures.Stack{Vector{ComplexF64}}}((1,))
              1: DataStructures.Stack{Vector{ComplexF64}}
                store: DataStructures.Deque{Vector{ComplexF64}}
          dB_pool: ACEbase.ObjectPools.VectorPool{ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, ComplexF64}}}}
            arrays: Array{DataStructures.Stack{Vector{ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, ComplexF64}}}}}}((1,))
              1: DataStructures.Stack{Vector{ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, ComplexF64}}}}}
                store: DataStructures.Deque{Vector{ACE.DState{(:rr,), Tuple{StaticArraysCore.SVector{3, ComplexF64}}}}}
      indices: Array{NTuple{4, Int64}}((180,))
        1: NTuple{4, Int64}
          1: Int64 1
          2: Int64 1
          3: Int64 1
          4: Int64 1
        2: NTuple{4, Int64}
          1: Int64 2
          2: Int64 1
          3: Int64 1
          4: Int64 1
        3: NTuple{4, Int64}
          1: Int64 1
          2: Int64 1
          3: Int64 1
          4: Int64 2
        4: NTuple{4, Int64}
          1: Int64 2
          2: Int64 1
          3: Int64 1
          4: Int64 2
        5: NTuple{4, Int64}
          1: Int64 1
          2: Int64 1
          3: Int64 2
          4: Int64 1
        ...
        176: NTuple{4, Int64}
          1: Int64 2
          2: Int64 1
          3: Int64 2
          4: Int64 25
        177: NTuple{4, Int64}
          1: Int64 1
          2: Int64 1
          3: Int64 1
          4: Int64 35
        178: NTuple{4, Int64}
          1: Int64 2
          2: Int64 1
          3: Int64 1
          4: Int64 35
        179: NTuple{4, Int64}
          1: Int64 1
          2: Int64 1
          3: Int64 1
          4: Int64 36
        180: NTuple{4, Int64}
          1: Int64 2
          2: Int64 1
          3: Int64 1
          4: Int64 36
    spec: ACE.PIBasisSpec
      orders: Array{Int64}((70,)) [1, 1, 1, 1, 1, 1, 1, 1, 1, 1  …  1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
      iAA2iA: Array{Int64}((70, 1)) [1; 2; … ; 165; 166;;]
    real: identity (function of type typeof(identity))
    B_pool: ACEbase.ObjectPools.VectorPool{ComplexF64}
      arrays: Array{DataStructures.Stack{Vector{ComplexF64}}}((1,))
        1: DataStructures.Stack{Vector{ComplexF64}}
          store: DataStructures.Deque{Vector{ComplexF64}}
            nblocks: Int64 1
            blksize: Int64 1024
            len: Int64 0
            head: DataStructures.DequeBlock{Vector{ComplexF64}}
              data: Array{Vector{ComplexF64}}((1024,))
                1: #undef
                2: #undef
                3: #undef
                4: #undef
                5: #undef
                ...
                1020: #undef
                1021: #undef
                1022: #undef
                1023: #undef
                1024: #undef
              capa: Int64 1024
              front: Int64 1
              back: Int64 0
              prev: DataStructures.DequeBlock{Vector{ComplexF64}}#= circular reference @-1 =#
              next: DataStructures.DequeBlock{Vector{ComplexF64}}#= circular reference @-1 =#
            rear: DataStructures.DequeBlock{Vector{ComplexF64}}
              data: Array{Vector{ComplexF64}}((1024,))
                1: #undef
                2: #undef
                3: #undef
                4: #undef
                5: #undef
                ...
                1020: #undef
                1021: #undef
                1022: #undef
                1023: #undef
                1024: #undef
              capa: Int64 1024
              front: Int64 1
              back: Int64 0
              prev: DataStructures.DequeBlock{Vector{ComplexF64}}#= circular reference @-1 =#
              next: DataStructures.DequeBlock{Vector{ComplexF64}}#= circular reference @-1 =#
    dAA_pool: ACEbase.ObjectPools.VectorPool{ComplexF64}
      arrays: Array{DataStructures.Stack{Vector{ComplexF64}}}((1,))
        1: DataStructures.Stack{Vector{ComplexF64}}
          store: DataStructures.Deque{Vector{ComplexF64}}
            nblocks: Int64 1
            blksize: Int64 1024
            len: Int64 0
            head: DataStructures.DequeBlock{Vector{ComplexF64}}
              data: Array{Vector{ComplexF64}}((1024,))
                1: #undef
                2: #undef
                3: #undef
                4: #undef
                5: #undef
                ...
                1020: #undef
                1021: #undef
                1022: #undef
                1023: #undef
                1024: #undef
              capa: Int64 1024
              front: Int64 1
              back: Int64 0
              prev: DataStructures.DequeBlock{Vector{ComplexF64}}#= circular reference @-1 =#
              next: DataStructures.DequeBlock{Vector{ComplexF64}}#= circular reference @-1 =#
            rear: DataStructures.DequeBlock{Vector{ComplexF64}}
              data: Array{Vector{ComplexF64}}((1024,))
                1: #undef
                2: #undef
                3: #undef
                4: #undef
                5: #undef
                ...
                1020: #undef
                1021: #undef
                1022: #undef
                1023: #undef
                1024: #undef
              capa: Int64 1024
              front: Int64 1
              back: Int64 0
              prev: DataStructures.DequeBlock{Vector{ComplexF64}}#= circular reference @-1 =#
              next: DataStructures.DequeBlock{Vector{ComplexF64}}#= circular reference @-1 =#
  A2Bmap: SparseArrays.SparseMatrixCSC{ACE.SphericalMatrix{1, 1, 3, 3, ComplexF64, 9}, Int64}
    m: Int64 18
    n: Int64 70
    colptr: Array{Int64}((71,)) [1, 2, 3, 4, 5, 6, 7, 8, 9, 10  …  47, 47, 48, 49, 49, 49, 50, 51, 51, 51]
    rowval: Array{Int64}((50,)) [1, 2, 3, 4, 7, 8, 7, 8, 5, 6  …  17, 18, 17, 18, 17, 18, 17, 18, 17, 18]
    nzval: Array{ACE.SphericalMatrix{1, 1, 3, 3, ComplexF64, 9}}((50,))
      1: ACE.SphericalMatrix{1, 1, 3, 3, ComplexF64, 9}
        val: StaticArraysCore.SMatrix{3, 3, ComplexF64, 9}
          data: NTuple{9, ComplexF64}
            1: ComplexF64
              re: Float64 -0.5773502691896257
              im: Float64 0.0
            2: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            3: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            4: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            5: ComplexF64
              re: Float64 -0.5773502691896257
              im: Float64 0.0
            6: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            7: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            8: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            9: ComplexF64
              re: Float64 -0.5773502691896257
              im: Float64 0.0
        _valL1: Val{1} Val{1}()
        _valL2: Val{1} Val{1}()
      2: ACE.SphericalMatrix{1, 1, 3, 3, ComplexF64, 9}
        val: StaticArraysCore.SMatrix{3, 3, ComplexF64, 9}
          data: NTuple{9, ComplexF64}
            1: ComplexF64
              re: Float64 -0.5773502691896257
              im: Float64 0.0
            2: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            3: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            4: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            5: ComplexF64
              re: Float64 -0.5773502691896257
              im: Float64 0.0
            6: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            7: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            8: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            9: ComplexF64
              re: Float64 -0.5773502691896257
              im: Float64 0.0
        _valL1: Val{1} Val{1}()
        _valL2: Val{1} Val{1}()
      3: ACE.SphericalMatrix{1, 1, 3, 3, ComplexF64, 9}
        val: StaticArraysCore.SMatrix{3, 3, ComplexF64, 9}
          data: NTuple{9, ComplexF64}
            1: ComplexF64
              re: Float64 -0.5773502691896257
              im: Float64 0.0
            2: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            3: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            4: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            5: ComplexF64
              re: Float64 -0.5773502691896257
              im: Float64 0.0
            6: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            7: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            8: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            9: ComplexF64
              re: Float64 -0.5773502691896257
              im: Float64 0.0
        _valL1: Val{1} Val{1}()
        _valL2: Val{1} Val{1}()
      4: ACE.SphericalMatrix{1, 1, 3, 3, ComplexF64, 9}
        val: StaticArraysCore.SMatrix{3, 3, ComplexF64, 9}
          data: NTuple{9, ComplexF64}
            1: ComplexF64
              re: Float64 -0.5773502691896257
              im: Float64 0.0
            2: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            3: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            4: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            5: ComplexF64
              re: Float64 -0.5773502691896257
              im: Float64 0.0
            6: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            7: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            8: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            9: ComplexF64
              re: Float64 -0.5773502691896257
              im: Float64 0.0
        _valL1: Val{1} Val{1}()
        _valL2: Val{1} Val{1}()
      5: ACE.SphericalMatrix{1, 1, 3, 3, ComplexF64, 9}
        val: StaticArraysCore.SMatrix{3, 3, ComplexF64, 9}
          data: NTuple{9, ComplexF64}
            1: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            2: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            3: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            4: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            5: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            6: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            7: ComplexF64
              re: Float64 -0.4472135954999576
              im: Float64 0.0
            8: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            9: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
        _valL1: Val{1} Val{1}()
        _valL2: Val{1} Val{1}()
      ...
      46: ACE.SphericalMatrix{1, 1, 3, 3, ComplexF64, 9}
        val: StaticArraysCore.SMatrix{3, 3, ComplexF64, 9}
          data: NTuple{9, ComplexF64}
            1: ComplexF64
              re: Float64 -0.18257418583505527
              im: Float64 0.0
            2: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            3: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            4: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            5: ComplexF64
              re: Float64 0.36514837167011055
              im: Float64 0.0
            6: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            7: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            8: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            9: ComplexF64
              re: Float64 -0.18257418583505527
              im: Float64 0.0
        _valL1: Val{1} Val{1}()
        _valL2: Val{1} Val{1}()
      47: ACE.SphericalMatrix{1, 1, 3, 3, ComplexF64, 9}
        val: StaticArraysCore.SMatrix{3, 3, ComplexF64, 9}
          data: NTuple{9, ComplexF64}
            1: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            2: ComplexF64
              re: Float64 -0.3162277660168377
              im: Float64 0.0
            3: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            4: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            5: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            6: ComplexF64
              re: Float64 0.3162277660168377
              im: Float64 0.0
            7: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            8: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            9: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
        _valL1: Val{1} Val{1}()
        _valL2: Val{1} Val{1}()
      48: ACE.SphericalMatrix{1, 1, 3, 3, ComplexF64, 9}
        val: StaticArraysCore.SMatrix{3, 3, ComplexF64, 9}
          data: NTuple{9, ComplexF64}
            1: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            2: ComplexF64
              re: Float64 -0.3162277660168377
              im: Float64 0.0
            3: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            4: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            5: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            6: ComplexF64
              re: Float64 0.3162277660168377
              im: Float64 0.0
            7: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            8: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            9: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
        _valL1: Val{1} Val{1}()
        _valL2: Val{1} Val{1}()
      49: ACE.SphericalMatrix{1, 1, 3, 3, ComplexF64, 9}
        val: StaticArraysCore.SMatrix{3, 3, ComplexF64, 9}
          data: NTuple{9, ComplexF64}
            1: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            2: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            3: ComplexF64
              re: Float64 -0.4472135954999576
              im: Float64 0.0
            4: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            5: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            6: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            7: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            8: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            9: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
        _valL1: Val{1} Val{1}()
        _valL2: Val{1} Val{1}()
      50: ACE.SphericalMatrix{1, 1, 3, 3, ComplexF64, 9}
        val: StaticArraysCore.SMatrix{3, 3, ComplexF64, 9}
          data: NTuple{9, ComplexF64}
            1: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            2: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            3: ComplexF64
              re: Float64 -0.4472135954999576
              im: Float64 0.0
            4: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            5: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            6: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            7: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            8: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
            9: ComplexF64
              re: Float64 0.0
              im: Float64 0.0
        _valL1: Val{1} Val{1}()
        _valL2: Val{1} Val{1}()
  symgrp: ACE.O3{:l, :m} ACE.O3{:l, :m}()
  real: identity (function of type typeof(identity))
  B_pool: ACEbase.ObjectPools.VectorPool{ACE.SphericalMatrix{1, 1, 3, 3, ComplexF64, 9}}
    arrays: Array{DataStructures.Stack{Vector{ACE.SphericalMatrix{1, 1, 3, 3, ComplexF64, 9}}}}((1,))
      1: DataStructures.Stack{Vector{ACE.SphericalMatrix{1, 1, 3, 3, ComplexF64, 9}}}
        store: DataStructures.Deque{Vector{ACE.SphericalMatrix{1, 1, 3, 3, ComplexF64, 9}}}
          nblocks: Int64 1
          blksize: Int64 1024
          len: Int64 0
          head: DataStructures.DequeBlock{Vector{ACE.SphericalMatrix{1, 1, 3, 3, ComplexF64, 9}}}
            data: Array{Vector{ACE.SphericalMatrix{1, 1, 3, 3, ComplexF64, 9}}}((1024,))
              1: #undef
              2: #undef
              3: #undef
              4: #undef
              5: #undef
              ...
              1020: #undef
              1021: #undef
              1022: #undef
              1023: #undef
              1024: #undef
            capa: Int64 1024
            front: Int64 1
            back: Int64 0
            prev: DataStructures.DequeBlock{Vector{ACE.SphericalMatrix{1, 1, 3, 3, ComplexF64, 9}}}#= circular reference @-1 =#
            next: DataStructures.DequeBlock{Vector{ACE.SphericalMatrix{1, 1, 3, 3, ComplexF64, 9}}}#= circular reference @-1 =#
          rear: DataStructures.DequeBlock{Vector{ACE.SphericalMatrix{1, 1, 3, 3, ComplexF64, 9}}}
            data: Array{Vector{ACE.SphericalMatrix{1, 1, 3, 3, ComplexF64, 9}}}((1024,))
              1: #undef
              2: #undef
              3: #undef
              4: #undef
              5: #undef
              ...
              1020: #undef
              1021: #undef
              1022: #undef
              1023: #undef
              1024: #undef
            capa: Int64 1024
            front: Int64 1
            back: Int64 0
            prev: DataStructures.DequeBlock{Vector{ACE.SphericalMatrix{1, 1, 3, 3, ComplexF64, 9}}}#= circular reference @-1 =#
            next: DataStructures.DequeBlock{Vector{ACE.SphericalMatrix{1, 1, 3, 3, ComplexF64, 9}}}#= circular reference @-1 =#
ComplexF64[-0.0050633953352986144 + 0.0im -0.05873632197663684 + 0.0im 0.019700308465161222 + 0.0im 0.11830336562012847 + 0.0im -0.03598236649909512 + 0.0im -0.03227031249005469 + 0.0im 0.0014449351243224229 + 0.0im 0.0007947992697942759 + 0.0im 0.03601382454604989 + 0.0im -0.0880016185207328 + 0.0im -0.005621853672545408 + 0.0im -0.002146486577618437 + 0.0im -0.011385983295150334 + 0.0im 0.018791553605586063 + 0.0im 0.010268245271770539 + 0.0im 0.002614600563059161 + 0.0im -0.010277222417337396 + 0.0im -0.002705273736890157 + 0.0im; 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.00012207817770758047 + 0.0im 0.036625694160528965 + 0.0im 0.0 + 0.0im 0.0 + 0.0im -0.000474973332802636 + 0.0im -0.07291352087312948 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0008675328393169537 + 0.0im 0.016190935345530736 + 0.0im -0.0008682912910656657 + 0.0im 0.06286562372889194 + 0.0im; 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.005358042678960509 + 0.0im 0.03863487269026185 + 0.0im 0.0 + 0.0im 0.0 + 0.0im -0.020846701976667933 + 0.0im -0.07793242942586456 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.03807623987961438 + 0.0im 0.02175957910178099 + 0.0im -0.03810952852231729 + 0.0im 0.05663752473081831 + 0.0im; 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.00012207817770758047 + 0.0im 0.036625694160528965 + 0.0im 0.0 + 0.0im 0.0 + 0.0im -0.000474973332802636 + 0.0im -0.07291352087312948 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0008675328393169537 + 0.0im 0.016190935345530736 + 0.0im -0.0008682912910656657 + 0.0im 0.06286562372889194 + 0.0im; -0.005063395335298615 + 0.0im -0.05873632197663685 + 0.0im 0.019700308465161225 + 0.0im 0.11830336562012848 + 0.0im -0.03598236649909513 + 0.0im -0.032270312490054694 + 0.0im -0.0035773955649291726 + 0.0im 0.001944390910475117 + 0.0im 0.0360138245460499 + 0.0im -0.08800161852073281 + 0.0im 0.013918683307166271 + 0.0im -0.0031193778873631894 + 0.0im -0.011385983295150335 + 0.0im 0.018791553605586066 + 0.0im -0.025422300611636417 + 0.0im -0.0022152175454109926 + 0.0im 0.025444526385095735 + 0.0im 0.009168310805911465 + 0.0im; 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.000130161496367967 + 0.0im 0.03446963705591935 + 0.0im 0.0 + 0.0im 0.0 + 0.0im -0.000506423350130271 + 0.0im -0.06874652888961821 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0009249759017891533 + 0.0im 0.015602778118457257 + 0.0im -0.0009257845738744438 + 0.0im 0.058803842449221766 + 0.0im; 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.005358042678960509 + 0.0im 0.03863487269026185 + 0.0im 0.0 + 0.0im 0.0 + 0.0im -0.020846701976667933 + 0.0im -0.07793242942586456 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.03807623987961438 + 0.0im 0.02175957910178099 + 0.0im -0.03810952852231729 + 0.0im 0.05663752473081831 + 0.0im; 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.000130161496367967 + 0.0im 0.03446963705591935 + 0.0im 0.0 + 0.0im 0.0 + 0.0im -0.000506423350130271 + 0.0im -0.06874652888961821 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0009249759017891533 + 0.0im 0.015602778118457257 + 0.0im -0.0009257845738744438 + 0.0im 0.058803842449221766 + 0.0im; -0.0050633953352986144 + 0.0im -0.05873632197663684 + 0.0im 0.019700308465161222 + 0.0im 0.11830336562012847 + 0.0im -0.03598236649909512 + 0.0im -0.03227031249005469 + 0.0im 0.002132460440606749 + 0.0im -0.0027391901802693926 + 0.0im 0.03601382454604989 + 0.0im -0.0880016185207328 + 0.0im -0.00829682963462086 + 0.0im 0.0052658644649816256 + 0.0im -0.011385983295150334 + 0.0im 0.018791553605586063 + 0.0im 0.015154055339865873 + 0.0im -0.0003993830176481685 + 0.0im -0.015167303967758332 + 0.0im -0.006463037069021306 + 0.0im; -0.005746975023682695 + 0.0im -0.058985492506241154 + 0.0im 0.022072672694424724 + 0.0im 0.11890866132275058 + 0.0im -0.039438080493070474 + 0.0im -0.03219935435822226 + 0.0im 0.0017137770686066322 + 0.0im -0.003996826979765314 + 0.0im 0.037726798757460364 + 0.0im -0.09024006296680415 + 0.0im -0.0065821828267359815 + 0.0im 0.007607905937466645 + 0.0im -0.009085532120327464 + 0.0im 0.02226296335407292 + 0.0im 0.011760635412606314 + 0.0im -0.0003107513144298718 + 0.0im -0.011250322528988695 + 0.0im -0.009695922400926727 + 0.0im; 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im -7.17962344673709e-5 + 0.0im 0.0299219210232124 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.00027575111733736847 + 0.0im -0.0611780256846527 + 0.0im 0.0 + 0.0im 0.0 + 0.0im -0.0004926949677622034 + 0.0im 0.01665591719569282 + 0.0im 0.0004713161407752609 + 0.0im 0.05116186882513601 + 0.0im; 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.006086859134141411 + 0.0im 0.03765539815966411 + 0.0im 0.0 + 0.0im 0.0 + 0.0im -0.02337808131257172 + 0.0im -0.07673027470109856 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.04177050352455198 + 0.0im 0.022470075469230542 + 0.0im -0.039958014202680366 + 0.0im 0.056606355731337314 + 0.0im; 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im -7.17962344673709e-5 + 0.0im 0.0299219210232124 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.00027575111733736847 + 0.0im -0.0611780256846527 + 0.0im 0.0 + 0.0im 0.0 + 0.0im -0.0004926949677622034 + 0.0im 0.01665591719569282 + 0.0im 0.0004713161407752609 + 0.0im 0.05116186882513601 + 0.0im; -0.005746975023682696 + 0.0im -0.05898549250624117 + 0.0im 0.022072672694424728 + 0.0im 0.1189086613227506 + 0.0im -0.03943808049307048 + 0.0im -0.032199354358222264 + 0.0im -0.004062832808491076 + 0.0im 0.0003739026894225433 + 0.0im 0.03772679875746037 + 0.0im -0.09024006296680416 + 0.0im 0.015604309819416611 + 0.0im -5.485848122880956e-5 + 0.0im -0.009085532120327465 + 0.0im 0.022262963354072924 + 0.0im -0.02788081150011369 + 0.0im -0.002442442883863422 + 0.0im 0.026671018252125468 + 0.0im 0.005235274251491038 + 0.0im; 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im -7.564057261715996e-5 + 0.0im 0.037299185041203914 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.00029051624461864364 + 0.0im -0.07517245437495257 + 0.0im 0.0 + 0.0im 0.0 + 0.0im -0.000519076380030254 + 0.0im 0.01878590556075061 + 0.0im 0.0004965528211392868 + 0.0im 0.06285400198939278 + 0.0im; 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.006086859134141411 + 0.0im 0.03765539815966411 + 0.0im 0.0 + 0.0im 0.0 + 0.0im -0.02337808131257172 + 0.0im -0.07673027470109856 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.04177050352455198 + 0.0im 0.022470075469230542 + 0.0im -0.039958014202680366 + 0.0im 0.056606355731337314 + 0.0im; 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im -7.564057261715996e-5 + 0.0im 0.037299185041203914 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.00029051624461864364 + 0.0im -0.07517245437495257 + 0.0im 0.0 + 0.0im 0.0 + 0.0im -0.000519076380030254 + 0.0im 0.01878590556075061 + 0.0im 0.0004965528211392868 + 0.0im 0.06285400198939278 + 0.0im; -0.005746975023682695 + 0.0im -0.058985492506241154 + 0.0im 0.022072672694424724 + 0.0im 0.11890866132275058 + 0.0im -0.039438080493070474 + 0.0im -0.03219935435822226 + 0.0im 0.0023490557398844433 + 0.0im 0.003622924290342771 + 0.0im 0.037726798757460364 + 0.0im -0.09024006296680415 + 0.0im -0.009022126992680625 + 0.0im -0.007553047456237835 + 0.0im -0.009085532120327464 + 0.0im 0.02226296335407292 + 0.0im 0.016120176087507373 + 0.0im 0.0027531941982932937 + 0.0im -0.015420695723136767 + 0.0im 0.00446064814943569 + 0.0im; -0.00619720259898323 + 0.0im -0.05855108397308427 + 0.0im 0.023608980250785738 + 0.0im 0.10875192098417578 + 0.0im -0.04159787230869603 + 0.0im -0.013647678140923767 + 0.0im 0.0021055336765785967 + 0.0im -0.0028286063959802594 + 0.0im 0.03863544594858391 + 0.0im -0.08616082635969902 + 0.0im -0.00802128092372907 + 0.0im 0.005056192768403483 + 0.0im -0.0073995558987919865 + 0.0im -0.0053495699674346005 + 0.0im 0.014133105965318268 + 0.0im 0.0001808238777696263 + 0.0im -0.013126605311842197 + 0.0im -0.005905027654578489 + 0.0im; 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im -0.0002947710686007029 + 0.0im 0.03583162311936686 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0011229654389932002 + 0.0im -0.06528933885690684 + 0.0im 0.0 + 0.0im 0.0 + 0.0im -0.001978610361062217 + 0.0im 0.004163232505942367 + 0.0im 0.0018377020125172764 + 0.0im 0.05855125097606925 + 0.0im; 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.006565956396803124 + 0.0im 0.038975518939620674 + 0.0im 0.0 + 0.0im 0.0 + 0.0im -0.025013791694510443 + 0.0im -0.07226826445893192 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.044073081590634854 + 0.0im 0.008987840673005445 + 0.0im -0.0409343811853217 + 0.0im 0.05660336432336443 + 0.0im; 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im -0.0002947710686007029 + 0.0im 0.03583162311936686 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0011229654389932002 + 0.0im -0.06528933885690684 + 0.0im 0.0 + 0.0im 0.0 + 0.0im -0.001978610361062217 + 0.0im 0.004163232505942367 + 0.0im 0.0018377020125172764 + 0.0im 0.05855125097606925 + 0.0im; -0.006197202598983231 + 0.0im -0.058551083973084284 + 0.0im 0.02360898025078574 + 0.0im 0.1087519209841758 + 0.0im -0.041597872308696035 + 0.0im -0.013647678140923769 + 0.0im -0.0043686907787280115 + 0.0im 0.0026670589414003526 + 0.0im 0.03863544594858392 + 0.0im -0.08616082635969903 + 0.0im 0.016643047031204297 + 0.0im -0.004237168424314099 + 0.0im -0.007399555898791988 + 0.0im -0.005349569967434601 + 0.0im -0.029324237551878917 + 0.0im -0.0022111704874250462 + 0.0im 0.02723588808849265 + 0.0im 0.009098755000065914 + 0.0im; 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im -0.00029833046355218765 + 0.0im 0.03760166336503625 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0011365253773318526 + 0.0im -0.06850045482171058 + 0.0im 0.0 + 0.0im 0.0 + 0.0im -0.0020025023113935444 + 0.0im 0.004139819825231388 + 0.0im 0.0018598924781445118 + 0.0im 0.06216703252386997 + 0.0im; 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.006565956396803124 + 0.0im 0.038975518939620674 + 0.0im 0.0 + 0.0im 0.0 + 0.0im -0.025013791694510443 + 0.0im -0.07226826445893192 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.044073081590634854 + 0.0im 0.008987840673005445 + 0.0im -0.0409343811853217 + 0.0im 0.05660336432336443 + 0.0im; 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im -0.00029833046355218765 + 0.0im 0.03760166336503625 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0011365253773318526 + 0.0im -0.06850045482171058 + 0.0im 0.0 + 0.0im 0.0 + 0.0im -0.0020025023113935444 + 0.0im 0.004139819825231388 + 0.0im 0.0018598924781445118 + 0.0im 0.06216703252386997 + 0.0im; -0.00619720259898323 + 0.0im -0.05855108397308427 + 0.0im 0.023608980250785738 + 0.0im 0.10875192098417578 + 0.0im -0.04159787230869603 + 0.0im -0.013647678140923767 + 0.0im 0.002263157102149414 + 0.0im 0.00016154745457990784 + 0.0im 0.03863544594858391 + 0.0im -0.08616082635969902 + 0.0im -0.008621766107475226 + 0.0im -0.0008190243440893854 + 0.0im -0.0073995558987919865 + 0.0im -0.0053495699674346005 + 0.0im 0.015191131586560644 + 0.0im 0.0020303466096554196 + 0.0im -0.01410928277665045 + 0.0im -0.003193727345487423 + 0.0im; -0.006381239001612868 + 0.0im -0.05399223192395645 + 0.0im 0.024231215778737002 + 0.0im 0.11382358722528473 + 0.0im -0.04245555386516683 + 0.0im -0.04087824890470586 + 0.0im 0.0025352921636665284 + 0.0im -0.0020179671193264965 + 0.0im 0.03896053719560125 + 0.0im -0.07992562428338726 + 0.0im -0.009627160409509394 + 0.0im 0.004170382910882493 + 0.0im -0.006677151752706811 + 0.0im 0.03229675296709762 + 0.0im 0.01686776392347539 + 0.0im -0.0011053680898170698 + 0.0im -0.015479179610617975 + 0.0im -0.004090414512239624 + 0.0im; 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im -0.0003813811213677307 + 0.0im 0.029837430586055636 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0014482028088060029 + 0.0im -0.06275946847713954 + 0.0im 0.0 + 0.0im 0.0 + 0.0im -0.0025373985737398227 + 0.0im 0.020521109023707625 + 0.0im 0.0023285154122878013 + 0.0im 0.05089958946509122 + 0.0im; 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.006751802916317048 + 0.0im 0.03746536515950714 + 0.0im 0.0 + 0.0im 0.0 + 0.0im -0.02563834285464514 + 0.0im -0.07940718770487579 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.044920983578304666 + 0.0im 0.029378423322410044 + 0.0im -0.0412230083518345 + 0.0im 0.05490915012966583 + 0.0im; 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im -0.0003813811213677307 + 0.0im 0.029837430586055636 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0014482028088060029 + 0.0im -0.06275946847713954 + 0.0im 0.0 + 0.0im 0.0 + 0.0im -0.0025373985737398227 + 0.0im 0.020521109023707625 + 0.0im 0.0023285154122878013 + 0.0im 0.05089958946509122 + 0.0im; -0.006381239001612869 + 0.0im -0.053992231923956455 + 0.0im 0.02423121577873701 + 0.0im 0.11382358722528474 + 0.0im -0.042455553865166834 + 0.0im -0.040878248904705865 + 0.0im -0.00449157865271625 + 0.0im -0.0038503350259609897 + 0.0im 0.038960537195601254 + 0.0im -0.07992562428338727 + 0.0im 0.017055686441712608 + 0.0im 0.00878975407468075 + 0.0im -0.006677151752706812 + 0.0im 0.03229675296709763 + 0.0im -0.02988329686160171 + 0.0im -0.005568495350052221 + 0.0im 0.027423250738906644 + 0.0im -0.0008813022282024703 + 0.0im; 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im -0.0003653787419551754 + 0.0im 0.03147168077361497 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0013874376331996917 + 0.0im -0.06643901674771381 + 0.0im 0.0 + 0.0im 0.0 + 0.0im -0.002430931807497583 + 0.0im 0.021841840855940417 + 0.0im 0.002230813179513977 + 0.0im 0.054874398613849566 + 0.0im; 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.006751802916317048 + 0.0im 0.03746536515950714 + 0.0im 0.0 + 0.0im 0.0 + 0.0im -0.02563834285464514 + 0.0im -0.07940718770487579 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.044920983578304666 + 0.0im 0.029378423322410044 + 0.0im -0.0412230083518345 + 0.0im 0.05490915012966583 + 0.0im; 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0 + 0.0im -0.0003653787419551754 + 0.0im 0.03147168077361497 + 0.0im 0.0 + 0.0im 0.0 + 0.0im 0.0013874376331996917 + 0.0im -0.06643901674771381 + 0.0im 0.0 + 0.0im 0.0 + 0.0im -0.002430931807497583 + 0.0im 0.021841840855940417 + 0.0im 0.002230813179513977 + 0.0im 0.054874398613849566 + 0.0im; -0.006381239001612868 + 0.0im -0.05399223192395645 + 0.0im 0.024231215778737002 + 0.0im 0.11382358722528473 + 0.0im -0.04245555386516683 + 0.0im -0.04087824890470586 + 0.0im 0.001956286489049721 + 0.0im 0.005868302145287486 + 0.0im 0.03896053719560125 + 0.0im -0.07992562428338726 + 0.0im -0.00742852603220321 + 0.0im -0.012960136985563241 + 0.0im -0.006677151752706811 + 0.0im 0.03229675296709762 + 0.0im 0.013015532938126314 + 0.0im 0.00667386343986929 + 0.0im -0.011944071128288661 + 0.0im 0.004971716740442093 + 0.0im]
